{
  "name": "Amazon S3 Object Lambda",
  "prefix": "s3-object-lambda",
  "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3objectlambda.html",
  "actions": {
    "AbortMultipartUpload": {
      "description": "Grants permission to abort a multipart upload",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html"
    },
    "DeleteObject": {
      "description": "Grants permission to remove the null version of an object and insert a delete marker, which becomes the current version of the object",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html"
    },
    "DeleteObjectTagging": {
      "description": "Grants permission to use the tagging subresource to remove the entire tag set from the specified object",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html"
    },
    "DeleteObjectVersion": {
      "description": "Grants permission to remove a specific version of an object",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html"
    },
    "DeleteObjectVersionTagging": {
      "description": "Grants permission to remove the entire tag set for a specific version of the object",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html"
    },
    "GetObject": {
      "description": "Grants permission to retrieve objects from Amazon S3",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html"
    },
    "GetObjectAcl": {
      "description": "Grants permission to return the access control list (ACL) of an object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html"
    },
    "GetObjectLegalHold": {
      "description": "Grants permission to get an object's current Legal Hold status",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLegalHold.html"
    },
    "GetObjectRetention": {
      "description": "Grants permission to retrieve the retention settings for an object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectRetention.html"
    },
    "GetObjectTagging": {
      "description": "Grants permission to return the tag set of an object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html"
    },
    "GetObjectVersion": {
      "description": "Grants permission to retrieve a specific version of an object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html"
    },
    "GetObjectVersionAcl": {
      "description": "Grants permission to return the access control list (ACL) of a specific object version",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html"
    },
    "GetObjectVersionTagging": {
      "description": "Grants permission to return the tag set for a specific version of the object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/setting-repl-config-perm-overview.html"
    },
    "ListBucket": {
      "description": "Grants permission to list some or all of the objects in an Amazon S3 bucket (up to 1000)",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html"
    },
    "ListBucketMultipartUploads": {
      "description": "Grants permission to list in-progress multipart uploads",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html"
    },
    "ListBucketVersions": {
      "description": "Grants permission to list metadata about all the versions of objects in an Amazon S3 bucket",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectVersions.html"
    },
    "ListMultipartUploadParts": {
      "description": "Grants permission to list the parts that have been uploaded for a specific multipart upload",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html"
    },
    "PutObject": {
      "description": "Grants permission to add an object to a bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html"
    },
    "PutObjectAcl": {
      "description": "Grants permission to set the access control list (ACL) permissions for new or existing objects in an S3 bucket.",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html"
    },
    "PutObjectLegalHold": {
      "description": "Grants permission to apply a Legal Hold configuration to the specified object",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectLegalHold.html"
    },
    "PutObjectRetention": {
      "description": "Grants permission to place an Object Retention configuration on an object",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectRetention.html"
    },
    "PutObjectTagging": {
      "description": "Grants permission to set the supplied tag-set to an object that already exists in a bucket",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html"
    },
    "PutObjectVersionAcl": {
      "description": "Grants permission to use the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html"
    },
    "PutObjectVersionTagging": {
      "description": "Grants permission to set the supplied tag-set for a specific version of an object",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge",
        "s3-object-lambda:versionid"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html"
    },
    "RestoreObject": {
      "description": "Grants permission to restore an archived copy of an object back into Amazon S3",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html"
    },
    "WriteGetObjectResponse": {
      "description": "Grants permission to provide data for GetObject requests send to S3 Object Lambda",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-object-lambda:TlsVersion",
        "s3-object-lambda:authType",
        "s3-object-lambda:signatureAge"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_WriteGetObjectResponse.html"
    }
  },
  "resourceTypes": {
    "objectlambdaaccesspoint": {
      "arn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/transforming-objects.html"
    }
  },
  "conditionKeys": {
    "s3-object-lambda:TlsVersion": {
      "description": "Filters access by the TLS version used by the client",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3-object-lambda:authType": {
      "description": "Filters access by authentication method",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3-object-lambda:signatureAge": {
      "description": "Filters access by the age in milliseconds of the request signature",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3-object-lambda:versionid": {
      "description": "Filters access by a specific object version",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/amazon-s3-policy-keys.html/#getobjectversion-limit-access-to-specific-version-3"
    }
  }
}