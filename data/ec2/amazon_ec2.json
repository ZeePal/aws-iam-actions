{
  "name": "Amazon EC2",
  "prefix": "ec2",
  "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2.html",
  "actions": {
    "AcceptAddressTransfer": {
      "description": "Grants permission to accept an Elastic IP address transfer",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": true,
          "conditionKeys": [
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptAddressTransfer.html"
    },
    "AcceptReservedInstancesExchangeQuote": {
      "description": "Grants permission to accept a Convertible Reserved Instance exchange quote",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptReservedInstancesExchangeQuote.html"
    },
    "AcceptTransitGatewayMulticastDomainAssociations": {
      "description": "Grants permission to accept a request to associate subnets with a transit gateway multicast domain",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayMulticastDomainAssociations.html"
    },
    "AcceptTransitGatewayPeeringAttachment": {
      "description": "Grants permission to accept a transit gateway peering attachment request",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayPeeringAttachment.html"
    },
    "AcceptTransitGatewayVpcAttachment": {
      "description": "Grants permission to accept a request to attach a VPC to a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayVpcAttachment.html"
    },
    "AcceptVpcEndpointConnections": {
      "description": "Grants permission to accept one or more interface VPC endpoint connections to your VPC endpoint service",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint-service": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptVpcEndpointConnections.html"
    },
    "AcceptVpcPeeringConnection": {
      "description": "Grants permission to accept a VPC peering connection request",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        "vpc-peering-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptVpcPeeringConnection.html"
    },
    "AdvertiseByoipCidr": {
      "description": "Grants permission to advertise an IP address range that is provisioned for use in AWS through bring your own IP addresses (BYOIP)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AdvertiseByoipCidr.html"
    },
    "AllocateAddress": {
      "description": "Grants permission to allocate an Elastic IP address (EIP) to your account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": true,
          "conditionKeys": []
        },
        "ipv4pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateAddress.html"
    },
    "AllocateHosts": {
      "description": "Grants permission to allocate a Dedicated Host to your account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "dedicated-host": {
          "required": true,
          "conditionKeys": [
            "ec2:AutoPlacement",
            "ec2:AvailabilityZone",
            "ec2:HostRecovery",
            "ec2:InstanceType",
            "ec2:Quantity"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateHosts.html"
    },
    "AllocateIpamPoolCidr": {
      "description": "Grants permission to allocate a CIDR from an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateIpamPoolCidr.html"
    },
    "ApplySecurityGroupsToClientVpnTargetNetwork": {
      "description": "Grants permission to apply a security group to the association between a Client VPN endpoint and a target network",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ApplySecurityGroupsToClientVpnTargetNetwork.html"
    },
    "AssignIpv6Addresses": {
      "description": "Grants permission to assign one or more IPv6 addresses to a network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssignIpv6Addresses.html"
    },
    "AssignPrivateIpAddresses": {
      "description": "Grants permission to assign one or more secondary private IP addresses to a network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssignPrivateIpAddresses.html"
    },
    "AssociateAddress": {
      "description": "Grants permission to associate an Elastic IP address (EIP) with an instance or a network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateAddress.html"
    },
    "AssociateClientVpnTargetNetwork": {
      "description": "Grants permission to associate a target network with a Client VPN endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateClientVpnTargetNetwork.html"
    },
    "AssociateDhcpOptions": {
      "description": "Grants permission to associate or disassociate a set of DHCP options with a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "dhcp-options": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:DhcpOptionsID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateDhcpOptions.html"
    },
    "AssociateEnclaveCertificateIamRole": {
      "description": "Grants permission to associate an ACM certificate with an IAM role to be used in an EC2 Enclave",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "certificate": {
          "required": true,
          "conditionKeys": []
        },
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateEnclaveCertificateIamRole.html"
    },
    "AssociateIamInstanceProfile": {
      "description": "Grants permission to associate an IAM instance profile with a running or stopped instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [
        "iam:PassRole"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateIamInstanceProfile.html"
    },
    "AssociateInstanceEventWindow": {
      "description": "Grants permission to associate one or more targets with an event window",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-event-window": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateInstanceEventWindow.html"
    },
    "AssociateRouteTable": {
      "description": "Grants permission to associate a subnet or gateway with a route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "internet-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "vpn-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateRouteTable.html"
    },
    "AssociateSubnetCidrBlock": {
      "description": "Grants permission to associate a CIDR block with a subnet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateSubnetCidrBlock.html"
    },
    "AssociateTransitGatewayMulticastDomain": {
      "description": "Grants permission to associate an attachment and list of subnets with a transit gateway multicast domain",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayMulticastDomain.html"
    },
    "AssociateTransitGatewayPolicyTable": {
      "description": "Grants permission to associate a policy table with a transit gateway attachment",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-policy-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayPolicyTable.html"
    },
    "AssociateTransitGatewayRouteTable": {
      "description": "Grants permission to associate an attachment with a transit gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayRouteTable.html"
    },
    "AssociateTrunkInterface": {
      "description": "Grants permission to associate a branch network interface with a trunk network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTrunkInterface.html"
    },
    "AssociateVpcCidrBlock": {
      "description": "Grants permission to associate a CIDR block with a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipv6pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Ipv4IpamPoolId",
            "ec2:Ipv6IpamPoolId",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateVpcCidrBlock.html"
    },
    "AttachClassicLinkVpc": {
      "description": "Grants permission to link an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachClassicLinkVpc.html"
    },
    "AttachInternetGateway": {
      "description": "Grants permission to attach an internet gateway to a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "internet-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway.html"
    },
    "AttachNetworkInterface": {
      "description": "Grants permission to attach a network interface to an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachNetworkInterface.html"
    },
    "AttachVerifiedAccessTrustProvider": {
      "description": "Grants permission to attach a trust provider to a Verified Access instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-trust-provider": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVerifiedAccessTrustProvider.html"
    },
    "AttachVolume": {
      "description": "Grants permission to attach an EBS volume to a running or stopped instance and expose it to the instance with the specified device name",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "volume": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVolume.html"
    },
    "AttachVpnGateway": {
      "description": "Grants permission to attach a virtual private gateway to a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        "vpn-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVpnGateway.html"
    },
    "AuthorizeClientVpnIngress": {
      "description": "Grants permission to add an inbound authorization rule to a Client VPN endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeClientVpnIngress.html"
    },
    "AuthorizeSecurityGroupEgress": {
      "description": "Grants permission to add one or more outbound rules to a VPC security group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "security-group-rule": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html"
    },
    "AuthorizeSecurityGroupIngress": {
      "description": "Grants permission to add one or more inbound rules to a security group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "security-group-rule": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html"
    },
    "BundleInstance": {
      "description": "Grants permission to bundle an instance store-backed Windows instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BundleInstance.html"
    },
    "CancelBundleTask": {
      "description": "Grants permission to cancel a bundling operation",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelBundleTask.html"
    },
    "CancelCapacityReservation": {
      "description": "Grants permission to cancel a Capacity Reservation and release the reserved capacity",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:CapacityReservationFleet",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelCapacityReservation.html"
    },
    "CancelCapacityReservationFleets": {
      "description": "Grants permission to cancel one or more Capacity Reservation Fleets",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation-fleet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelCapacityReservationFleets.html"
    },
    "CancelConversionTask": {
      "description": "Grants permission to cancel an active conversion task",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelConversionTask.html"
    },
    "CancelExportTask": {
      "description": "Grants permission to cancel an active export task",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "export-image-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "export-instance-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelExportTask.html"
    },
    "CancelImageLaunchPermission": {
      "description": "Grants permission to remove your AWS account from the launch permissions for the specified AMI",
      "accessLevel": "Write",
      "permissionOnly": true,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelImageLaunchPermission.html"
    },
    "CancelImportTask": {
      "description": "Grants permission to cancel an in-process import virtual machine or import snapshot task",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "import-image-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "import-snapshot-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelImportTask.html"
    },
    "CancelReservedInstancesListing": {
      "description": "Grants permission to cancel a Reserved Instance listing on the Reserved Instance Marketplace",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelReservedInstancesListing.html"
    },
    "CancelSpotFleetRequests": {
      "description": "Grants permission to cancel one or more Spot Fleet requests",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "spot-fleet-request": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotFleetRequests.html"
    },
    "CancelSpotInstanceRequests": {
      "description": "Grants permission to cancel one or more Spot Instance requests",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "spot-instances-request": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotInstanceRequests.html"
    },
    "ConfirmProductInstance": {
      "description": "Grants permission to determine whether an owned product code is associated with an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ConfirmProductInstance.html"
    },
    "CopyFpgaImage": {
      "description": "Grants permission to copy a source Amazon FPGA image (AFI) to the current Region. Resource-level permissions specified for this action apply to the new AFI only. They do not apply to the source AFI",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "fpga-image": {
          "required": true,
          "conditionKeys": [
            "ec2:Owner"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopyFpgaImage.html"
    },
    "CopyImage": {
      "description": "Grants permission to copy an Amazon Machine Image (AMI) from a source Region to the current Region. Resource-level permissions specified for this action apply to the new AMI only. They do not apply to the source AMI",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "ec2:ImageID",
            "ec2:Owner"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopyImage.html"
    },
    "CopySnapshot": {
      "description": "Grants permission to copy a point-in-time snapshot of an EBS volume and store it in Amazon S3. Resource-level permissions specified for this action apply to the new snapshot only. They do not apply to the source snapshot",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "ec2:OutpostArn",
            "ec2:SnapshotID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopySnapshot.html"
    },
    "CreateCapacityReservation": {
      "description": "Grants permission to create a Capacity Reservation",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation": {
          "required": true,
          "conditionKeys": [
            "ec2:CapacityReservationFleet"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCapacityReservation.html"
    },
    "CreateCapacityReservationFleet": {
      "description": "Grants permission to create a Capacity Reservation Fleet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation-fleet": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCapacityReservationFleet.html"
    },
    "CreateCarrierGateway": {
      "description": "Grants permission to create a carrier gateway and provides CSP connectivity to VPC customers",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "carrier-gateway": {
          "required": true,
          "conditionKeys": []
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCarrierGateway.html"
    },
    "CreateClientVpnEndpoint": {
      "description": "Grants permission to create a Client VPN endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID"
          ]
        },
        "vpc": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnEndpoint.html"
    },
    "CreateClientVpnRoute": {
      "description": "Grants permission to add a network route to a Client VPN endpoint's route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnRoute.html"
    },
    "CreateCoipCidr": {
      "description": "Grants permission to create a range of customer-owned IP (CoIP) addresses",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "coip-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCoipCidr.html"
    },
    "CreateCoipPool": {
      "description": "Grants permission to create a pool of customer-owned IP (CoIP) addresses",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCoipPool.html"
    },
    "CreateCoipPoolPermission": {
      "description": "Grants permission to allow a service to access a customer-owned IP (CoIP) pool",
      "accessLevel": "Write",
      "permissionOnly": true,
      "resourceTypes": {
        "coip-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html"
    },
    "CreateCustomerGateway": {
      "description": "Grants permission to create a customer gateway, which provides information to AWS about your customer gateway device",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "customer-gateway": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCustomerGateway.html"
    },
    "CreateDefaultSubnet": {
      "description": "Grants permission to create a default subnet in a specified Availability Zone in a default VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateDefaultSubnet.html"
    },
    "CreateDefaultVpc": {
      "description": "Grants permission to create a default VPC with a default subnet in each Availability Zone",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateDefaultVpc.html"
    },
    "CreateDhcpOptions": {
      "description": "Grants permission to create a set of DHCP options for a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "dhcp-options": {
          "required": true,
          "conditionKeys": [
            "ec2:DhcpOptionsID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateDhcpOptions.html"
    },
    "CreateEgressOnlyInternetGateway": {
      "description": "Grants permission to create an egress-only internet gateway for a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "egress-only-internet-gateway": {
          "required": true,
          "conditionKeys": []
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateEgressOnlyInternetGateway.html"
    },
    "CreateFleet": {
      "description": "Grants permission to launch an EC2 Fleet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "fleet": {
          "required": true,
          "conditionKeys": []
        },
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        "instance": {
          "required": true,
          "conditionKeys": [
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:PlacementGroup",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "key-pair": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "launch-template": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "volume": {
          "required": false,
          "conditionKeys": [
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:KmsKeyId",
            "ec2:ParentSnapshot",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html"
    },
    "CreateFlowLogs": {
      "description": "Grants permission to create one or more flow logs to capture IP traffic for a network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "vpc": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        "vpc-flow-log": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags",
        "iam:PassRole"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFlowLogs.html"
    },
    "CreateFpgaImage": {
      "description": "Grants permission to create an Amazon FPGA Image (AFI) from a design checkpoint (DCP)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "fpga-image": {
          "required": true,
          "conditionKeys": [
            "ec2:Owner",
            "ec2:Public"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFpgaImage.html"
    },
    "CreateImage": {
      "description": "Grants permission to create an Amazon EBS-backed AMI from a stopped or running Amazon EBS-backed instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "ec2:ImageID",
            "ec2:Owner"
          ]
        },
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html"
    },
    "CreateInstanceEventWindow": {
      "description": "Grants permission to create an event window in which scheduled events for the associated Amazon EC2 instances can run",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-event-window": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInstanceEventWindow.html"
    },
    "CreateInstanceExportTask": {
      "description": "Grants permission to export a running or stopped instance to an Amazon S3 bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "export-instance-task": {
          "required": true,
          "conditionKeys": []
        },
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInstanceExportTask.html"
    },
    "CreateInternetGateway": {
      "description": "Grants permission to create an internet gateway for a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "internet-gateway": {
          "required": true,
          "conditionKeys": [
            "ec2:InternetGatewayID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInternetGateway.html"
    },
    "CreateIpam": {
      "description": "Grants permission to create an Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags",
        "iam:CreateServiceLinkedRole"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpam.html"
    },
    "CreateIpamPool": {
      "description": "Grants permission to create an IP address pool for Amazon VPC IP Address Manager (IPAM), which is a collection of contiguous IP address CIDRs",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": []
        },
        "ipam-scope": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpamPool.html"
    },
    "CreateIpamScope": {
      "description": "Grants permission to create an Amazon VPC IP Address Manager (IPAM) scope, which is the highest-level container within IPAM",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipam-scope": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpamScope.html"
    },
    "CreateKeyPair": {
      "description": "Grants permission to create a 2048-bit RSA key pair",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "key-pair": {
          "required": true,
          "conditionKeys": [
            "ec2:KeyPairType"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html"
    },
    "CreateLaunchTemplate": {
      "description": "Grants permission to create a launch template",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "launch-template": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html"
    },
    "CreateLaunchTemplateVersion": {
      "description": "Grants permission to create a new version of a launch template",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "launch-template": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html"
    },
    "CreateLocalGatewayRoute": {
      "description": "Grants permission to create a static route for a local gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-virtual-interface-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRoute.html"
    },
    "CreateLocalGatewayRouteTable": {
      "description": "Grants permission to create a local gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-route-table": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/API_CreateLocalGatewayRouteTable.html"
    },
    "CreateLocalGatewayRouteTablePermission": {
      "description": "Grants permission to allow a service to access a local gateway route table",
      "accessLevel": "Write",
      "permissionOnly": true,
      "resourceTypes": {
        "local-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html"
    },
    "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
      "description": "Grants permission to create a local gateway route table virtual interface group association",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-route-table-virtual-interface-group-association": {
          "required": true,
          "conditionKeys": []
        },
        "local-gateway-virtual-interface-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation.html"
    },
    "CreateLocalGatewayRouteTableVpcAssociation": {
      "description": "Grants permission to associate a VPC with a local gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-route-table-vpc-association": {
          "required": true,
          "conditionKeys": []
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRouteTableVpcAssociation.html"
    },
    "CreateManagedPrefixList": {
      "description": "Grants permission to create a managed prefix list",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "prefix-list": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateManagedPrefixList.html"
    },
    "CreateNatGateway": {
      "description": "Grants permission to create a NAT gateway in a subnet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "natgateway": {
          "required": true,
          "conditionKeys": []
        },
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNatGateway.html"
    },
    "CreateNetworkAcl": {
      "description": "Grants permission to create a network ACL in a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-acl": {
          "required": true,
          "conditionKeys": [
            "ec2:NetworkAclID"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html"
    },
    "CreateNetworkAclEntry": {
      "description": "Grants permission to create a numbered entry (a rule) in a network ACL",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-acl": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html"
    },
    "CreateNetworkInsightsAccessScope": {
      "description": "Grants permission to create a Network Access Scope",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-insights-access-scope": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsAccessScope.html"
    },
    "CreateNetworkInsightsPath": {
      "description": "Grants permission to create a path to analyze for reachability",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "internet-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-insights-path": {
          "required": true,
          "conditionKeys": []
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "transit-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-peering-connection": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        },
        "vpn-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html"
    },
    "CreateNetworkInterface": {
      "description": "Grants permission to create a network interface in a subnet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "ec2:NetworkInterfaceID"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html"
    },
    "CreateNetworkInterfacePermission": {
      "description": "Grants permission to create a permission for an AWS-authorized user to perform certain operations on a network interface",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AuthorizedService",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterfacePermission.html"
    },
    "CreatePlacementGroup": {
      "description": "Grants permission to create a placement group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "placement-group": {
          "required": true,
          "conditionKeys": [
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreatePlacementGroup.html"
    },
    "CreatePublicIpv4Pool": {
      "description": "Grants permission to create a public IPv4 address pool for public IPv4 CIDRs that you own and bring to Amazon to manage with Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipv4pool-ec2": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreatePublicIpv4Pool.html"
    },
    "CreateReplaceRootVolumeTask": {
      "description": "Grants permission to create a root volume replacement task",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "replace-root-volume-task": {
          "required": true,
          "conditionKeys": []
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        },
        "volume": {
          "required": true,
          "conditionKeys": [
            "ec2:VolumeID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateReplaceRootVolumeTask.html"
    },
    "CreateReservedInstancesListing": {
      "description": "Grants permission to create a listing for Standard Reserved Instances to be sold in the Reserved Instance Marketplace",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateReservedInstancesListing.html"
    },
    "CreateRestoreImageTask": {
      "description": "Grants permission to start a task that restores an AMI from an S3 object previously created by using CreateStoreImageTask",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "ec2:ImageID",
            "ec2:Owner"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRestoreImageTask.html"
    },
    "CreateRoute": {
      "description": "Grants permission to create a route in a VPC route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRoute.html"
    },
    "CreateRouteTable": {
      "description": "Grants permission to create a route table for a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "route-table": {
          "required": true,
          "conditionKeys": [
            "ec2:RouteTableID"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable.html"
    },
    "CreateSecurityGroup": {
      "description": "Grants permission to create a security group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "security-group": {
          "required": true,
          "conditionKeys": [
            "ec2:SecurityGroupID"
          ]
        },
        "vpc": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html"
    },
    "CreateSnapshot": {
      "description": "Grants permission to create a snapshot of an EBS volume and store it in Amazon S3",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "ec2:OutpostArn",
            "ec2:ParentVolume",
            "ec2:SnapshotID",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        },
        "volume": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Encrypted",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshot.html"
    },
    "CreateSnapshots": {
      "description": "Grants permission to create crash-consistent snapshots of multiple EBS volumes and store them in Amazon S3",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "ec2:OutpostArn",
            "ec2:ParentVolume",
            "ec2:SnapshotID",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        },
        "volume": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Encrypted",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshots.html"
    },
    "CreateSpotDatafeedSubscription": {
      "description": "Grants permission to create a data feed for Spot Instances to view Spot Instance usage logs",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSpotDatafeedSubscription.html"
    },
    "CreateStoreImageTask": {
      "description": "Grants permission to store an AMI as a single object in an S3 bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateStoreImageTask.html"
    },
    "CreateSubnet": {
      "description": "Grants permission to create a subnet in a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "subnet": {
          "required": true,
          "conditionKeys": [
            "ec2:SubnetID"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSubnet.html"
    },
    "CreateSubnetCidrReservation": {
      "description": "Grants permission to create a subnet CIDR reservation",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSubnetCidrReservation.html"
    },
    "CreateTags": {
      "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "capacity-reservation-fleet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "carrier-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:Vpc"
          ]
        },
        "client-vpn-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        "coip-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "customer-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "dedicated-host": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AutoPlacement",
            "ec2:AvailabilityZone",
            "ec2:HostRecovery",
            "ec2:InstanceType",
            "ec2:Quantity",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "dhcp-options": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:DhcpOptionsID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "egress-only-internet-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "elastic-gpu": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ElasticGpuType",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "elastic-ip": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "export-image-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "export-instance-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "fleet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "fpga-image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "host-reservation": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        "import-image-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "import-snapshot-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "instance-event-window": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "internet-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipam": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipam-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipam-scope": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipv4pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipv6pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "key-pair": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "launch-template": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-route-table-virtual-interface-group-association": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-route-table-vpc-association": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-virtual-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-virtual-interface-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "natgateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-acl": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        },
        "network-insights-access-scope": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-insights-access-scope-analysis": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-insights-analysis": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-insights-path": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "prefix-list": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "replace-root-volume-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "reserved-instances": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:InstanceType",
            "ec2:ReservedInstancesOfferingType",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy"
          ]
        },
        "route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "security-group-rule": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        },
        "spot-fleet-request": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "spot-instances-request": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "subnet-cidr-reservation": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-filter": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-session": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-target": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-attachment": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-connect-peer": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-policy-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table-announcement": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:DomainCertificateArn",
            "ec2:LoadBalancerArn",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-policy": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-trust-provider": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "volume": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        },
        "vpc": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        "vpc-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-endpoint-connection": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-endpoint-service": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpceServicePrivateDnsName"
          ]
        },
        "vpc-endpoint-service-permission": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-flow-log": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-peering-connection": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        },
        "vpn-connection": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AuthenticationType",
            "ec2:DPDTimeoutSeconds",
            "ec2:GatewayType",
            "ec2:IKEVersions",
            "ec2:InsideTunnelCidr",
            "ec2:InsideTunnelIpv6Cidr",
            "ec2:Phase1DHGroup",
            "ec2:Phase1EncryptionAlgorithms",
            "ec2:Phase1IntegrityAlgorithms",
            "ec2:Phase1LifetimeSeconds",
            "ec2:Phase2DHGroup",
            "ec2:Phase2EncryptionAlgorithms",
            "ec2:Phase2IntegrityAlgorithms",
            "ec2:Phase2LifetimeSeconds",
            "ec2:PreSharedKeys",
            "ec2:RekeyFuzzPercentage",
            "ec2:RekeyMarginTimeSeconds",
            "ec2:ReplayWindowSizePackets",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RoutingType"
          ]
        },
        "vpn-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:CreateAction",
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html"
    },
    "CreateTrafficMirrorFilter": {
      "description": "Grants permission to create a traffic mirror filter",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "traffic-mirror-filter": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilter.html"
    },
    "CreateTrafficMirrorFilterRule": {
      "description": "Grants permission to create a traffic mirror filter rule",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "traffic-mirror-filter": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilterRule.html"
    },
    "CreateTrafficMirrorSession": {
      "description": "Grants permission to create a traffic mirror session",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-filter": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-session": {
          "required": true,
          "conditionKeys": []
        },
        "traffic-mirror-target": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.html"
    },
    "CreateTrafficMirrorTarget": {
      "description": "Grants permission to create a traffic mirror target",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-target": {
          "required": true,
          "conditionKeys": []
        },
        "vpc-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpceServiceName",
            "ec2:VpceServiceOwner"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorTarget.html"
    },
    "CreateTransitGateway": {
      "description": "Grants permission to create a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGateway.html"
    },
    "CreateTransitGatewayConnect": {
      "description": "Grants permission to create a Connect attachment from a specified transit gateway attachment",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayConnect.html"
    },
    "CreateTransitGatewayConnectPeer": {
      "description": "Grants permission to create a Connect peer between a transit gateway and an appliance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-connect-peer": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayConnectPeer.html"
    },
    "CreateTransitGatewayMulticastDomain": {
      "description": "Grants permission to create a multicast domain for a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayMulticastDomain.html"
    },
    "CreateTransitGatewayPeeringAttachment": {
      "description": "Grants permission to request a transit gateway peering attachment between a requester and accepter transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPeeringAttachment.html"
    },
    "CreateTransitGatewayPolicyTable": {
      "description": "Grants permission to create a transit gateway policy table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-policy-table": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPolicyTable.html"
    },
    "CreateTransitGatewayPrefixListReference": {
      "description": "Grants permission to create a transit gateway prefix list reference",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "prefix-list": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-attachment": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPrefixListReference.html"
    },
    "CreateTransitGatewayRoute": {
      "description": "Grants permission to create a static route for a transit gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRoute.html"
    },
    "CreateTransitGatewayRouteTable": {
      "description": "Grants permission to create a route table for a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRouteTable.html"
    },
    "CreateTransitGatewayRouteTableAnnouncement": {
      "description": "Grants permission to create an announcement for a transit gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table-announcement": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRouteTableAnnouncement.html"
    },
    "CreateTransitGatewayVpcAttachment": {
      "description": "Grants permission to attach a VPC to a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "transit-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": []
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayVpcAttachment.html"
    },
    "CreateVerifiedAccessEndpoint": {
      "description": "Grants permission to create a Verified Access endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "verified-access-endpoint": {
          "required": true,
          "conditionKeys": [
            "ec2:DomainCertificateArn",
            "ec2:LoadBalancerArn"
          ]
        },
        "verified-access-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVerifiedAccessEndpoint.html"
    },
    "CreateVerifiedAccessGroup": {
      "description": "Grants permission to create a Verified Access group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-group": {
          "required": true,
          "conditionKeys": []
        },
        "verified-access-instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVerifiedAccessGroup.html"
    },
    "CreateVerifiedAccessInstance": {
      "description": "Grants permission to create a Verified Access instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-instance": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVerifiedAccessInstance.html"
    },
    "CreateVerifiedAccessTrustProvider": {
      "description": "Grants permission to create a verified trust provider",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-trust-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVerifiedAccessTrustProvider.html"
    },
    "CreateVolume": {
      "description": "Grants permission to create an EBS volume",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "volume": {
          "required": true,
          "conditionKeys": [
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:KmsKeyId",
            "ec2:ParentSnapshot",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html"
    },
    "CreateVpc": {
      "description": "Grants permission to create a VPC with a specified CIDR block",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipv6pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "ec2:Ipv4IpamPoolId",
            "ec2:Ipv6IpamPoolId",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpc.html"
    },
    "CreateVpcEndpoint": {
      "description": "Grants permission to create a VPC endpoint for an AWS service",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcID"
          ]
        },
        "vpc-endpoint": {
          "required": true,
          "conditionKeys": [
            "ec2:VpceServiceName",
            "ec2:VpceServiceOwner"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags",
        "route53:AssociateVPCWithHostedZone"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpoint.html"
    },
    "CreateVpcEndpointConnectionNotification": {
      "description": "Grants permission to create a connection notification for a VPC endpoint or VPC endpoint service",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html"
    },
    "CreateVpcEndpointServiceConfiguration": {
      "description": "Grants permission to create a VPC endpoint service configuration to which service consumers (AWS accounts, IAM users, and IAM roles) can connect",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint-service": {
          "required": true,
          "conditionKeys": [
            "ec2:VpceServicePrivateDnsName"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointServiceConfiguration.html"
    },
    "CreateVpcPeeringConnection": {
      "description": "Grants permission to request a VPC peering connection between two VPCs",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        "vpc-peering-connection": {
          "required": true,
          "conditionKeys": [
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:VpcPeeringConnectionID"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcPeeringConnection.html"
    },
    "CreateVpnConnection": {
      "description": "Grants permission to create a VPN connection between a virtual private gateway or transit gateway and a customer gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "customer-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-attachment": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpn-connection": {
          "required": true,
          "conditionKeys": [
            "ec2:AuthenticationType",
            "ec2:DPDTimeoutSeconds",
            "ec2:GatewayType",
            "ec2:IKEVersions",
            "ec2:InsideTunnelCidr",
            "ec2:InsideTunnelIpv6Cidr",
            "ec2:Phase1DHGroup",
            "ec2:Phase1EncryptionAlgorithms",
            "ec2:Phase1IntegrityAlgorithms",
            "ec2:Phase1LifetimeSeconds",
            "ec2:Phase2DHGroup",
            "ec2:Phase2EncryptionAlgorithms",
            "ec2:Phase2IntegrityAlgorithms",
            "ec2:Phase2LifetimeSeconds",
            "ec2:PreSharedKeys",
            "ec2:RekeyFuzzPercentage",
            "ec2:RekeyMarginTimeSeconds",
            "ec2:ReplayWindowSizePackets",
            "ec2:RoutingType"
          ]
        },
        "vpn-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnection.html"
    },
    "CreateVpnConnectionRoute": {
      "description": "Grants permission to create a static route for a VPN connection between a virtual private gateway and a customer gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpn-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnectionRoute.html"
    },
    "CreateVpnGateway": {
      "description": "Grants permission to create a virtual private gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpn-gateway": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnGateway.html"
    },
    "DeleteCarrierGateway": {
      "description": "Grants permission to delete a carrier gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "carrier-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCarrierGateway.html"
    },
    "DeleteClientVpnEndpoint": {
      "description": "Grants permission to delete a Client VPN endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteClientVpnEndpoint.html"
    },
    "DeleteClientVpnRoute": {
      "description": "Grants permission to delete a route from a Client VPN endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteClientVpnRoute.html"
    },
    "DeleteCoipCidr": {
      "description": "Grants permission to delete a range of customer-owned IP (CoIP) addresses",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "coip-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/API_DeleteCoipCidr.html"
    },
    "DeleteCoipPool": {
      "description": "Grants permission to delete a pool of customer-owned IP (CoIP) addresses",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "coip-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/API_DeleteCoipPool.html"
    },
    "DeleteCoipPoolPermission": {
      "description": "Grants permission to deny a service from accessing a customer-owned IP (CoIP) pool",
      "accessLevel": "Write",
      "permissionOnly": true,
      "resourceTypes": {
        "coip-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html"
    },
    "DeleteCustomerGateway": {
      "description": "Grants permission to delete a customer gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "customer-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCustomerGateway.html"
    },
    "DeleteDhcpOptions": {
      "description": "Grants permission to delete a set of DHCP options",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "dhcp-options": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:DhcpOptionsID",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteDhcpOptions.html"
    },
    "DeleteEgressOnlyInternetGateway": {
      "description": "Grants permission to delete an egress-only internet gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "egress-only-internet-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteEgressOnlyInternetGateway.html"
    },
    "DeleteFleets": {
      "description": "Grants permission to delete one or more EC2 Fleets",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "fleet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFleets.html"
    },
    "DeleteFlowLogs": {
      "description": "Grants permission to delete one or more flow logs",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-flow-log": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html"
    },
    "DeleteFpgaImage": {
      "description": "Grants permission to delete an Amazon FPGA Image (AFI)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "fpga-image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFpgaImage.html"
    },
    "DeleteInstanceEventWindow": {
      "description": "Grants permission to delete the specified event window",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-event-window": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInstanceEventWindow.html"
    },
    "DeleteInternetGateway": {
      "description": "Grants permission to delete an internet gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "internet-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInternetGateway.html"
    },
    "DeleteIpam": {
      "description": "Grants permission to delete an Amazon VPC IP Address Manager (IPAM) and remove all monitored data associated with the IPAM including the historical data for CIDRs",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpam.html"
    },
    "DeleteIpamPool": {
      "description": "Grants permission to delete an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpamPool.html"
    },
    "DeleteIpamScope": {
      "description": "Grants permission to delete the scope for an Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-scope": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpamScope.html"
    },
    "DeleteKeyPair": {
      "description": "Grants permission to delete a  key pair by removing the public key from Amazon EC2",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "key-pair": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteKeyPair.html"
    },
    "DeleteLaunchTemplate": {
      "description": "Grants permission to delete a launch template and its associated versions",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "launch-template": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLaunchTemplate.html"
    },
    "DeleteLaunchTemplateVersions": {
      "description": "Grants permission to delete one or more versions of a launch template",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "launch-template": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLaunchTemplateVersions.html"
    },
    "DeleteLocalGatewayRoute": {
      "description": "Grants permission to delete a route from a local gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLocalGatewayRoute.html"
    },
    "DeleteLocalGatewayRouteTable": {
      "description": "Grants permission to delete a local gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/API_DeleteLocalGatewayRouteTable.html"
    },
    "DeleteLocalGatewayRouteTablePermission": {
      "description": "Grants permission to deny a service from accessing a local gateway route table",
      "accessLevel": "Write",
      "permissionOnly": true,
      "resourceTypes": {
        "local-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html"
    },
    "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
      "description": "Grants permission to delete a local gateway route table virtual interface group association",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway-route-table-virtual-interface-group-association": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation.html"
    },
    "DeleteLocalGatewayRouteTableVpcAssociation": {
      "description": "Grants permission to delete an association between a VPC and local gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway-route-table-vpc-association": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLocalGatewayRouteTableVpcAssociation.html"
    },
    "DeleteManagedPrefixList": {
      "description": "Grants permission to delete a managed prefix list",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "prefix-list": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteManagedPrefixList.html"
    },
    "DeleteNatGateway": {
      "description": "Grants permission to delete a NAT gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "natgateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNatGateway.html"
    },
    "DeleteNetworkAcl": {
      "description": "Grants permission to delete a network ACL",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-acl": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAcl.html"
    },
    "DeleteNetworkAclEntry": {
      "description": "Grants permission to delete an inbound or outbound entry (rule) from a network ACL",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-acl": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html"
    },
    "DeleteNetworkInsightsAccessScope": {
      "description": "Grants permission to delete a Network Access Scope",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-insights-access-scope": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAccessScope.html"
    },
    "DeleteNetworkInsightsAccessScopeAnalysis": {
      "description": "Grants permission to delete a Network Access Scope analysis",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-insights-access-scope-analysis": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAccessScopeAnalysis.html"
    },
    "DeleteNetworkInsightsAnalysis": {
      "description": "Grants permission to delete a network insights analysis",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-insights-analysis": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAnalysis.html"
    },
    "DeleteNetworkInsightsPath": {
      "description": "Grants permission to delete a network insights path",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-insights-path": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsPath.html"
    },
    "DeleteNetworkInterface": {
      "description": "Grants permission to delete a detached network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInterface.html"
    },
    "DeleteNetworkInterfacePermission": {
      "description": "Grants permission to delete a permission that is associated with a network interface",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInterfacePermission.html"
    },
    "DeletePlacementGroup": {
      "description": "Grants permission to delete a placement group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeletePlacementGroup.html"
    },
    "DeletePublicIpv4Pool": {
      "description": "Grants permission to delete a public IPv4 address pool for public IPv4 CIDRs that you own and brought to Amazon to manage with Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipv4pool-ec2": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeletePublicIpv4Pool.html"
    },
    "DeleteQueuedReservedInstances": {
      "description": "Grants permission to delete the queued purchases for the specified Reserved Instances",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteQueuedReservedInstances.html"
    },
    "DeleteResourcePolicy": {
      "description": "Grants permission to remove an IAM policy that enables cross-account sharing from a resource",
      "accessLevel": "Write",
      "permissionOnly": true,
      "resourceTypes": {
        "ipam-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/vpc/latest/ipam/share-pool-ipam.html"
    },
    "DeleteRoute": {
      "description": "Grants permission to delete a route from a route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html"
    },
    "DeleteRouteTable": {
      "description": "Grants permission to delete a route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRouteTable.html"
    },
    "DeleteSecurityGroup": {
      "description": "Grants permission to delete a security group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSecurityGroup.html"
    },
    "DeleteSnapshot": {
      "description": "Grants permission to delete a snapshot of an EBS volume",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSnapshot.html"
    },
    "DeleteSpotDatafeedSubscription": {
      "description": "Grants permission to delete a data feed for Spot Instances",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSpotDatafeedSubscription.html"
    },
    "DeleteSubnet": {
      "description": "Grants permission to delete a subnet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSubnet.html"
    },
    "DeleteSubnetCidrReservation": {
      "description": "Grants permission to delete a subnet CIDR reservation",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSubnetCidrReservation.html"
    },
    "DeleteTags": {
      "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "capacity-reservation-fleet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "carrier-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "client-vpn-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "coip-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "customer-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "dedicated-host": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "dhcp-options": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "egress-only-internet-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "elastic-gpu": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "elastic-ip": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "export-image-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "export-instance-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "fleet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "fpga-image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "host-reservation": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "import-image-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "import-snapshot-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "instance-event-window": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "internet-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipam": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipam-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipam-scope": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipv4pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipv6pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "key-pair": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "launch-template": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-route-table-virtual-interface-group-association": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-route-table-vpc-association": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-virtual-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-virtual-interface-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "natgateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-acl": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-insights-access-scope": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-insights-access-scope-analysis": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-insights-analysis": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-insights-path": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "prefix-list": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "replace-root-volume-task": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "reserved-instances": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "security-group-rule": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "spot-fleet-request": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "spot-instances-request": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "subnet-cidr-reservation": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-filter": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-session": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-target": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-attachment": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-connect-peer": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-policy-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table-announcement": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-policy": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-trust-provider": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "volume": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-endpoint-connection": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-endpoint-service": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-endpoint-service-permission": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-flow-log": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-peering-connection": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpn-connection": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpn-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html"
    },
    "DeleteTrafficMirrorFilter": {
      "description": "Grants permission to delete a traffic mirror filter",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "traffic-mirror-filter": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorFilter.html"
    },
    "DeleteTrafficMirrorFilterRule": {
      "description": "Grants permission to delete a traffic mirror filter rule",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "traffic-mirror-filter": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-filter-rule": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorFilterRule.html"
    },
    "DeleteTrafficMirrorSession": {
      "description": "Grants permission to delete a traffic mirror session",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "traffic-mirror-session": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorSession.html"
    },
    "DeleteTrafficMirrorTarget": {
      "description": "Grants permission to delete a traffic mirror target",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "traffic-mirror-target": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorTarget.html"
    },
    "DeleteTransitGateway": {
      "description": "Grants permission to delete a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGateway.html"
    },
    "DeleteTransitGatewayConnect": {
      "description": "Grants permission to delete a transit gateway connect attachment",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayConnect.html"
    },
    "DeleteTransitGatewayConnectPeer": {
      "description": "Grants permission to delete a transit gateway connect peer",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-connect-peer": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayConnectPeer.html"
    },
    "DeleteTransitGatewayMulticastDomain": {
      "description": "Grants permission to delete a transit gateway multicast domain",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-multicast-domain": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayMulticastDomain.html"
    },
    "DeleteTransitGatewayPeeringAttachment": {
      "description": "Grants permission to delete a peering attachment from a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPeeringAttachment.html"
    },
    "DeleteTransitGatewayPolicyTable": {
      "description": "Grants permission to delete a transit gateway policy table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-policy-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPolicyTable.html"
    },
    "DeleteTransitGatewayPrefixListReference": {
      "description": "Grants permission to delete a transit gateway prefix list reference",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "prefix-list": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPrefixListReference.html"
    },
    "DeleteTransitGatewayRoute": {
      "description": "Grants permission to delete a route from a transit gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayRoute.html"
    },
    "DeleteTransitGatewayRouteTable": {
      "description": "Grants permission to delete a transit gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayRouteTable.html"
    },
    "DeleteTransitGatewayRouteTableAnnouncement": {
      "description": "Grants permission to delete a transit gateway route table announcement",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-route-table-announcement": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayRouteTableAnnouncement.html"
    },
    "DeleteTransitGatewayVpcAttachment": {
      "description": "Grants permission to delete a VPC attachment from a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayVpcAttachment.html"
    },
    "DeleteVerifiedAccessEndpoint": {
      "description": "Grants permission to delete a Verified Access endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:DomainCertificateArn",
            "ec2:LoadBalancerArn",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVerifiedAccessEndpoint.html"
    },
    "DeleteVerifiedAccessGroup": {
      "description": "Grants permission to delete a Verified Access group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVerifiedAccessGroup.html"
    },
    "DeleteVerifiedAccessInstance": {
      "description": "Grants permission to delete a Verified Access instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVerifiedAccessInstance.html"
    },
    "DeleteVerifiedAccessTrustProvider": {
      "description": "Grants permission to delete a verified trust provider",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-trust-provider": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVerifiedAccessTrustProvider.html"
    },
    "DeleteVolume": {
      "description": "Grants permission to delete an EBS volume",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "volume": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVolume.html"
    },
    "DeleteVpc": {
      "description": "Grants permission to delete a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpc.html"
    },
    "DeleteVpcEndpointConnectionNotifications": {
      "description": "Grants permission to delete one or more VPC endpoint connection notifications",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-endpoint-service": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpointConnectionNotifications.html"
    },
    "DeleteVpcEndpointServiceConfigurations": {
      "description": "Grants permission to delete one or more VPC endpoint service configurations",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint-service": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpointServiceConfigurations.html"
    },
    "DeleteVpcEndpoints": {
      "description": "Grants permission to delete one or more VPC endpoints",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpceServiceName"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpoints.html"
    },
    "DeleteVpcPeeringConnection": {
      "description": "Grants permission to delete a VPC peering connection",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-peering-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcPeeringConnection.html"
    },
    "DeleteVpnConnection": {
      "description": "Grants permission to delete a VPN connection",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpn-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnConnection.html"
    },
    "DeleteVpnConnectionRoute": {
      "description": "Grants permission to delete a static route for a VPN connection between a virtual private gateway and a customer gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpn-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnConnectionRoute.html"
    },
    "DeleteVpnGateway": {
      "description": "Grants permission to delete a virtual private gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpn-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnGateway.html"
    },
    "DeprovisionByoipCidr": {
      "description": "Grants permission to release an IP address range that was provisioned through bring your own IP addresses (BYOIP), and to delete the corresponding address pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionByoipCidr.html"
    },
    "DeprovisionIpamPoolCidr": {
      "description": "Grants permission to deprovision a CIDR provisioned from an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionIpamPoolCidr.html"
    },
    "DeprovisionPublicIpv4PoolCidr": {
      "description": "Grants permission to deprovision a CIDR from a public IPv4 pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipv4pool-ec2": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionPublicIpv4PoolCidr.html"
    },
    "DeregisterImage": {
      "description": "Grants permission to deregister an Amazon Machine Image (AMI)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterImage.html"
    },
    "DeregisterInstanceEventNotificationAttributes": {
      "description": "Grants permission to remove tags from the set of tags to include in notifications about scheduled events for your instances",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterInstanceEventNotificationAttributes.html"
    },
    "DeregisterTransitGatewayMulticastGroupMembers": {
      "description": "Grants permission to deregister one or more network interface members from a group IP address in a transit gateway multicast domain",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterTransitGatewayMulticastGroupMembers.html"
    },
    "DeregisterTransitGatewayMulticastGroupSources": {
      "description": "Grants permission to deregister one or more network interface sources from a group IP address in a transit gateway multicast domain",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterTransitGatewayMulticastGroupSources.html"
    },
    "DescribeAccountAttributes": {
      "description": "Grants permission to describe the attributes of the AWS account",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAccountAttributes.html"
    },
    "DescribeAddressTransfers": {
      "description": "Grants permission to describe an Elastic IP address transfer",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddressTransfers.html"
    },
    "DescribeAddresses": {
      "description": "Grants permission to describe one or more Elastic IP addresses",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddresses.html"
    },
    "DescribeAddressesAttribute": {
      "description": "Grants permission to describe the attributes of the specified Elastic IP addresses",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddressesAttribute.html"
    },
    "DescribeAggregateIdFormat": {
      "description": "Grants permission to describe the longer ID format settings for all resource types",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAggregateIdFormat.html"
    },
    "DescribeAvailabilityZones": {
      "description": "Grants permission to describe one or more of the Availability Zones that are available to you",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html"
    },
    "DescribeAwsNetworkPerformanceMetricSubscriptions": {
      "description": "Grants permission to describe the current infrastructure performance metric subscriptions",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAwsNetworkPerformanceMetricSubscriptions.html"
    },
    "DescribeBundleTasks": {
      "description": "Grants permission to describe one or more bundling tasks",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeBundleTasks.html"
    },
    "DescribeByoipCidrs": {
      "description": "Grants permission to describe the IP address ranges that were provisioned through bring your own IP addresses (BYOIP)",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeByoipCidrs.html"
    },
    "DescribeCapacityReservationFleets": {
      "description": "Grants permission to describe one or more Capacity Reservation Fleets",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCapacityReservationFleets.html"
    },
    "DescribeCapacityReservations": {
      "description": "Grants permission to describe one or more Capacity Reservations",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCapacityReservations.html"
    },
    "DescribeCarrierGateways": {
      "description": "Grants permission to describe one or more Carrier Gateways",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCarrierGateways.html"
    },
    "DescribeClassicLinkInstances": {
      "description": "Grants permission to describe one or more linked EC2-Classic instances",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClassicLinkInstances.html"
    },
    "DescribeClientVpnAuthorizationRules": {
      "description": "Grants permission to describe the authorization rules for a Client VPN endpoint",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnAuthorizationRules.html"
    },
    "DescribeClientVpnConnections": {
      "description": "Grants permission to describe active client connections and connections that have been terminated within the last 60 minutes for a Client VPN endpoint",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnConnections.html"
    },
    "DescribeClientVpnEndpoints": {
      "description": "Grants permission to describe one or more Client VPN endpoints",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnEndpoints.html"
    },
    "DescribeClientVpnRoutes": {
      "description": "Grants permission to describe the routes for a Client VPN endpoint",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnRoutes.html"
    },
    "DescribeClientVpnTargetNetworks": {
      "description": "Grants permission to describe the target networks that are associated with a Client VPN endpoint",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnTargetNetworks.html"
    },
    "DescribeCoipPools": {
      "description": "Grants permission to describe the specified customer-owned address pools or all of your customer-owned address pools",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html"
    },
    "DescribeConversionTasks": {
      "description": "Grants permission to describe one or more conversion tasks",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeConversionTasks.html"
    },
    "DescribeCustomerGateways": {
      "description": "Grants permission to describe one or more customer gateways",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCustomerGateways.html"
    },
    "DescribeDhcpOptions": {
      "description": "Grants permission to describe one or more DHCP options sets",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeDhcpOptions.html"
    },
    "DescribeEgressOnlyInternetGateways": {
      "description": "Grants permission to describe one or more egress-only internet gateways",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeEgressOnlyInternetGateways.html"
    },
    "DescribeElasticGpus": {
      "description": "Grants permission to describe an Elastic Graphics accelerator that is associated with an instance",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeElasticGpus.html"
    },
    "DescribeExportImageTasks": {
      "description": "Grants permission to describe one or more export image tasks",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeExportImageTasks.html"
    },
    "DescribeExportTasks": {
      "description": "Grants permission to describe one or more export instance tasks",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeExportTasks.html"
    },
    "DescribeFastLaunchImages": {
      "description": "Grants permission to describe fast-launch enabled Windows AMIs",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFastLaunchImages.html"
    },
    "DescribeFastSnapshotRestores": {
      "description": "Grants permission to describe the state of fast snapshot restores for snapshots",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFastSnapshotRestores.html"
    },
    "DescribeFleetHistory": {
      "description": "Grants permission to describe the events for an EC2 Fleet during a specified time",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "fleet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleetHistory.html"
    },
    "DescribeFleetInstances": {
      "description": "Grants permission to describe the running instances for an EC2 Fleet",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "fleet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleetInstances.html"
    },
    "DescribeFleets": {
      "description": "Grants permission to describe one or more EC2 Fleets",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleets.html"
    },
    "DescribeFlowLogs": {
      "description": "Grants permission to describe one or more flow logs",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFlowLogs.html"
    },
    "DescribeFpgaImageAttribute": {
      "description": "Grants permission to describe the attributes of an Amazon FPGA Image (AFI)",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "fpga-image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFpgaImageAttribute.html"
    },
    "DescribeFpgaImages": {
      "description": "Grants permission to describe one or more Amazon FPGA Images (AFIs)",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFpgaImages.html"
    },
    "DescribeHostReservationOfferings": {
      "description": "Grants permission to describe the Dedicated Host Reservations that are available to purchase",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHostReservationOfferings.html"
    },
    "DescribeHostReservations": {
      "description": "Grants permission to describe the Dedicated Host Reservations that are associated with Dedicated Hosts in the AWS account",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHostReservations.html"
    },
    "DescribeHosts": {
      "description": "Grants permission to describe one or more Dedicated Hosts",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHosts.html"
    },
    "DescribeIamInstanceProfileAssociations": {
      "description": "Grants permission to describe the IAM instance profile associations",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIamInstanceProfileAssociations.html"
    },
    "DescribeIdFormat": {
      "description": "Grants permission to describe the ID format settings for resources",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIdFormat.html"
    },
    "DescribeIdentityIdFormat": {
      "description": "Grants permission to describe the ID format settings for resources for an IAM user, IAM role, or root user",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIdentityIdFormat.html"
    },
    "DescribeImageAttribute": {
      "description": "Grants permission to describe an attribute of an Amazon Machine Image (AMI)",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html"
    },
    "DescribeImages": {
      "description": "Grants permission to describe one or more images (AMIs, AKIs, and ARIs)",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html"
    },
    "DescribeImportImageTasks": {
      "description": "Grants permission to describe import virtual machine or import snapshot tasks",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImportImageTasks.html"
    },
    "DescribeImportSnapshotTasks": {
      "description": "Grants permission to describe import snapshot tasks",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImportSnapshotTasks.html"
    },
    "DescribeInstanceAttribute": {
      "description": "Grants permission to describe the attributes of an instance",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceAttribute.html"
    },
    "DescribeInstanceCreditSpecifications": {
      "description": "Grants permission to describe the credit option for CPU usage of one or more burstable performance instances",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceCreditSpecifications.html"
    },
    "DescribeInstanceEventNotificationAttributes": {
      "description": "Grants permission to describe the set of tags to include in notifications about scheduled events for your instances",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceEventNotificationAttributes.html"
    },
    "DescribeInstanceEventWindows": {
      "description": "Grants permission to describe the specified event windows or all event windows",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceEventWindows.html"
    },
    "DescribeInstanceStatus": {
      "description": "Grants permission to describe the status of one or more instances",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceStatus.html"
    },
    "DescribeInstanceTypeOfferings": {
      "description": "Grants permission to describe the set of instance types that are offered in a location",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypeOfferings.html"
    },
    "DescribeInstanceTypes": {
      "description": "Grants permission to describe the details of instance types that are offered in a location",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypes.html"
    },
    "DescribeInstances": {
      "description": "Grants permission to describe one or more instances",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html"
    },
    "DescribeInternetGateways": {
      "description": "Grants permission to describe one or more internet gateways",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html"
    },
    "DescribeIpamPools": {
      "description": "Grants permission to describe Amazon VPC IP Address Manager (IPAM) pools",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpamPools.html"
    },
    "DescribeIpamScopes": {
      "description": "Grants permission to describe Amazon VPC IP Address Manager (IPAM) scopes",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpamScopes.html"
    },
    "DescribeIpams": {
      "description": "Grants permission to describe an Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpams.html"
    },
    "DescribeIpv6Pools": {
      "description": "Grants permission to describe one or more IPv6 address pools",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpv6Pools.html"
    },
    "DescribeKeyPairs": {
      "description": "Grants permission to describe one or more key pairs",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeKeyPairs.html"
    },
    "DescribeLaunchTemplateVersions": {
      "description": "Grants permission to describe one or more launch template versions",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html"
    },
    "DescribeLaunchTemplates": {
      "description": "Grants permission to describe one or more launch templates",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html"
    },
    "DescribeLocalGatewayRouteTablePermissions": {
      "description": "Grants permission to allow a service to describe local gateway route table permissions",
      "accessLevel": "List",
      "permissionOnly": true,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html"
    },
    "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations": {
      "description": "Grants permission to describe the associations between virtual interface groups and local gateway route tables",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations.html"
    },
    "DescribeLocalGatewayRouteTableVpcAssociations": {
      "description": "Grants permission to describe an association between VPCs and local gateway route tables",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTableVpcAssociations.html"
    },
    "DescribeLocalGatewayRouteTables": {
      "description": "Grants permission to describe one or more local gateway route tables",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html"
    },
    "DescribeLocalGatewayVirtualInterfaceGroups": {
      "description": "Grants permission to describe local gateway virtual interface groups",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayVirtualInterfaceGroups.html"
    },
    "DescribeLocalGatewayVirtualInterfaces": {
      "description": "Grants permission to describe local gateway virtual interfaces",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayVirtualInterfaces.html"
    },
    "DescribeLocalGateways": {
      "description": "Grants permission to describe one or more local gateways",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html"
    },
    "DescribeManagedPrefixLists": {
      "description": "Grants permission to describe your managed prefix lists and any AWS-managed prefix lists",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html"
    },
    "DescribeMovingAddresses": {
      "description": "Grants permission to describe Elastic IP addresses that are being moved to the EC2-VPC platform",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeMovingAddresses.html"
    },
    "DescribeNatGateways": {
      "description": "Grants permission to describe one or more NAT gateways",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html"
    },
    "DescribeNetworkAcls": {
      "description": "Grants permission to describe one or more network ACLs",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html"
    },
    "DescribeNetworkInsightsAccessScopeAnalyses": {
      "description": "Grants permission to describe one or more Network Access Scope analyses",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAccessScopeAnalyses.html"
    },
    "DescribeNetworkInsightsAccessScopes": {
      "description": "Grants permission to describe the Network Access Scopes",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAccessScopes.html"
    },
    "DescribeNetworkInsightsAnalyses": {
      "description": "Grants permission to describe one or more network insights analyses",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html"
    },
    "DescribeNetworkInsightsPaths": {
      "description": "Grants permission to describe one or more network insights paths",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsPaths.html"
    },
    "DescribeNetworkInterfaceAttribute": {
      "description": "Grants permission to describe a network interface attribute",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaceAttribute.html"
    },
    "DescribeNetworkInterfacePermissions": {
      "description": "Grants permission to describe the permissions that are associated with a network interface",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfacePermissions.html"
    },
    "DescribeNetworkInterfaces": {
      "description": "Grants permission to describe one or more network interfaces",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html"
    },
    "DescribePlacementGroups": {
      "description": "Grants permission to describe one or more placement groups",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePlacementGroups.html"
    },
    "DescribePrefixLists": {
      "description": "Grants permission to describe available AWS services in a prefix list format",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html"
    },
    "DescribePrincipalIdFormat": {
      "description": "Grants permission to describe the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrincipalIdFormat.html"
    },
    "DescribePublicIpv4Pools": {
      "description": "Grants permission to describe one or more IPv4 address pools",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePublicIpv4Pools.html"
    },
    "DescribeRegions": {
      "description": "Grants permission to describe one or more AWS Regions that are currently available in your account",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html"
    },
    "DescribeReplaceRootVolumeTasks": {
      "description": "Grants permission to describe a root volume replacement task",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReplaceRootVolumeTasks.html"
    },
    "DescribeReservedInstances": {
      "description": "Grants permission to describe one or more purchased Reserved Instances in your account",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstances.html"
    },
    "DescribeReservedInstancesListings": {
      "description": "Grants permission to describe your account's Reserved Instance listings in the Reserved Instance Marketplace",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstancesListings.html"
    },
    "DescribeReservedInstancesModifications": {
      "description": "Grants permission to describe the modifications made to one or more Reserved Instances",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstancesModifications.html"
    },
    "DescribeReservedInstancesOfferings": {
      "description": "Grants permission to describe the Reserved Instance offerings that are available for purchase",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstancesOfferings.html"
    },
    "DescribeRouteTables": {
      "description": "Grants permission to describe one or more route tables",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html"
    },
    "DescribeScheduledInstanceAvailability": {
      "description": "Grants permission to find available schedules for Scheduled Instances",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeScheduledInstanceAvailability.html"
    },
    "DescribeScheduledInstances": {
      "description": "Grants permission to describe one or more Scheduled Instances in your account",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeScheduledInstances.html"
    },
    "DescribeSecurityGroupReferences": {
      "description": "Grants permission to describe the VPCs on the other side of a VPC peering connection that are referencing specified VPC security groups",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroupReferences.html"
    },
    "DescribeSecurityGroupRules": {
      "description": "Grants permission to describe one or more of your security group rules",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroupRules.html"
    },
    "DescribeSecurityGroups": {
      "description": "Grants permission to describe one or more security groups",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html"
    },
    "DescribeSnapshotAttribute": {
      "description": "Grants permission to describe an attribute of a snapshot",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshotAttribute.html"
    },
    "DescribeSnapshotTierStatus": {
      "description": "Grants permission to describe the storage tier status for Amazon EBS snapshots",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshotTierStatus.html"
    },
    "DescribeSnapshots": {
      "description": "Grants permission to describe one or more EBS snapshots",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshots.html"
    },
    "DescribeSpotDatafeedSubscription": {
      "description": "Grants permission to describe the data feed for Spot Instances",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotDatafeedSubscription.html"
    },
    "DescribeSpotFleetInstances": {
      "description": "Grants permission to describe the running instances for a Spot Fleet",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "spot-fleet-request": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetInstances.html"
    },
    "DescribeSpotFleetRequestHistory": {
      "description": "Grants permission to describe the events for a Spot Fleet request during a specified time",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "spot-fleet-request": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetRequestHistory.html"
    },
    "DescribeSpotFleetRequests": {
      "description": "Grants permission to describe one or more Spot Fleet requests",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetRequests.html"
    },
    "DescribeSpotInstanceRequests": {
      "description": "Grants permission to describe one or more Spot Instance requests",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotInstanceRequests.html"
    },
    "DescribeSpotPriceHistory": {
      "description": "Grants permission to describe the Spot Instance price history",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotPriceHistory.html"
    },
    "DescribeStaleSecurityGroups": {
      "description": "Grants permission to describe the stale security group rules for security groups in a specified VPC",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeStaleSecurityGroups.html"
    },
    "DescribeStoreImageTasks": {
      "description": "Grants permission to describe the progress of the AMI store tasks",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeStoreImageTasks.html"
    },
    "DescribeSubnets": {
      "description": "Grants permission to describe one or more subnets",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html"
    },
    "DescribeTags": {
      "description": "Grants permission to describe one or more tags for an Amazon EC2 resource",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTags.html"
    },
    "DescribeTrafficMirrorFilters": {
      "description": "Grants permission to describe one or more traffic mirror filters",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrafficMirrorFilters.html"
    },
    "DescribeTrafficMirrorSessions": {
      "description": "Grants permission to describe one or more traffic mirror sessions",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrafficMirrorSessions.html"
    },
    "DescribeTrafficMirrorTargets": {
      "description": "Grants permission to describe one or more traffic mirror targets",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrafficMirrorTargets.html"
    },
    "DescribeTransitGatewayAttachments": {
      "description": "Grants permission to describe one or more attachments between resources and transit gateways",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html"
    },
    "DescribeTransitGatewayConnectPeers": {
      "description": "Grants permission to describe one or more transit gateway connect peers",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayConnectPeers.html"
    },
    "DescribeTransitGatewayConnects": {
      "description": "Grants permission to describe one or more transit gateway connect attachments",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayConnects.html"
    },
    "DescribeTransitGatewayMulticastDomains": {
      "description": "Grants permission to describe one or more transit gateway multicast domains",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayMulticastDomains.html"
    },
    "DescribeTransitGatewayPeeringAttachments": {
      "description": "Grants permission to describe one or more transit gateway peering attachments",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html"
    },
    "DescribeTransitGatewayPolicyTables": {
      "description": "Grants permission to describe a transit gateway policy table",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPolicyTables.html"
    },
    "DescribeTransitGatewayRouteTableAnnouncements": {
      "description": "Grants permission to describe a transit gateway route table announcement",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayRouteTableAnnouncements.html"
    },
    "DescribeTransitGatewayRouteTables": {
      "description": "Grants permission to describe one or more transit gateway route tables",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayRouteTables.html"
    },
    "DescribeTransitGatewayVpcAttachments": {
      "description": "Grants permission to describe one or more VPC attachments on a transit gateway",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayVpcAttachments.html"
    },
    "DescribeTransitGateways": {
      "description": "Grants permission to describe one or more transit gateways",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html"
    },
    "DescribeTrunkInterfaceAssociations": {
      "description": "Grants permission to describe one or more network interface trunk associations",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrunkInterfaceAssociations.html"
    },
    "DescribeVerifiedAccessEndpoints": {
      "description": "Grants permission to describe the specified Verified Access endpoints or all Verified Access endpoints",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVerifiedAccessEndpoints.html"
    },
    "DescribeVerifiedAccessGroups": {
      "description": "Grants permission to describe the specified Verified Access groups or all Verified Access groups",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVerifiedAccessGroups.html"
    },
    "DescribeVerifiedAccessInstanceLoggingConfigurations": {
      "description": "Grants permission to describe the current logging configuration for the Verified Access instances",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVerifiedAccessInstanceLoggingConfigurations.html"
    },
    "DescribeVerifiedAccessInstances": {
      "description": "Grants permission to describe the specified Verified Access instances or all Verified Access instances",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVerifiedAccessInstances.html"
    },
    "DescribeVerifiedAccessTrustProviders": {
      "description": "Grants permission to describe details of existing Verified Access trust providers",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVerifiedAccessTrustProviders.html"
    },
    "DescribeVolumeAttribute": {
      "description": "Grants permission to describe an attribute of an EBS volume",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "volume": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumeAttribute.html"
    },
    "DescribeVolumeStatus": {
      "description": "Grants permission to describe the status of one or more EBS volumes",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumeStatus.html"
    },
    "DescribeVolumes": {
      "description": "Grants permission to describe one or more EBS volumes",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html"
    },
    "DescribeVolumesModifications": {
      "description": "Grants permission to describe the current modification status of one or more EBS volumes",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumesModifications.html"
    },
    "DescribeVpcAttribute": {
      "description": "Grants permission to describe an attribute of a VPC",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcAttribute.html"
    },
    "DescribeVpcClassicLink": {
      "description": "Grants permission to describe the ClassicLink status of one or more VPCs",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcClassicLink.html"
    },
    "DescribeVpcClassicLinkDnsSupport": {
      "description": "Grants permission to describe the ClassicLink DNS support status of one or more VPCs",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcClassicLinkDnsSupport.html"
    },
    "DescribeVpcEndpointConnectionNotifications": {
      "description": "Grants permission to describe the connection notifications for VPC endpoints and VPC endpoint services",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointConnectionNotifications.html"
    },
    "DescribeVpcEndpointConnections": {
      "description": "Grants permission to describe the VPC endpoint connections to your VPC endpoint services",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointConnections.html"
    },
    "DescribeVpcEndpointServiceConfigurations": {
      "description": "Grants permission to describe VPC endpoint service configurations (your services)",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServiceConfigurations.html"
    },
    "DescribeVpcEndpointServicePermissions": {
      "description": "Grants permission to describe the principals (service consumers) that are permitted to discover your VPC endpoint service",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServicePermissions.html"
    },
    "DescribeVpcEndpointServices": {
      "description": "Grants permission to describe all supported AWS services that can be specified when creating a VPC endpoint",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html"
    },
    "DescribeVpcEndpoints": {
      "description": "Grants permission to describe one or more VPC endpoints",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html"
    },
    "DescribeVpcPeeringConnections": {
      "description": "Grants permission to describe one or more VPC peering connections",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html"
    },
    "DescribeVpcs": {
      "description": "Grants permission to describe one or more VPCs",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html"
    },
    "DescribeVpnConnections": {
      "description": "Grants permission to describe one or more VPN connections",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html"
    },
    "DescribeVpnGateways": {
      "description": "Grants permission to describe one or more virtual private gateways",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html"
    },
    "DetachClassicLinkVpc": {
      "description": "Grants permission to unlink (detach) a linked EC2-Classic instance from a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachClassicLinkVpc.html"
    },
    "DetachInternetGateway": {
      "description": "Grants permission to detach an internet gateway from a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "internet-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html"
    },
    "DetachNetworkInterface": {
      "description": "Grants permission to detach a network interface from an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachNetworkInterface.html"
    },
    "DetachVerifiedAccessTrustProvider": {
      "description": "Grants permission to detach a trust provider from a Verified Access instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-trust-provider": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVerifiedAccessTrustProvider.html"
    },
    "DetachVolume": {
      "description": "Grants permission to detach an EBS volume from an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "volume": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVolume.html"
    },
    "DetachVpnGateway": {
      "description": "Grants permission to detach a virtual private gateway from a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        "vpn-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVpnGateway.html"
    },
    "DisableAddressTransfer": {
      "description": "Grants permission to disable Elastic IP address transfer",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableAddressTransfer.html"
    },
    "DisableAwsNetworkPerformanceMetricSubscription": {
      "description": "Grants permission to disable infrastructure performance metric subscriptions",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableAwsNetworkPerformanceMetricSubscription.html"
    },
    "DisableEbsEncryptionByDefault": {
      "description": "Grants permission to disable EBS encryption by default for your account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html"
    },
    "DisableFastLaunch": {
      "description": "Grants permission to disable faster launching for Windows AMIs",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableFastLaunch.html"
    },
    "DisableFastSnapshotRestores": {
      "description": "Grants permission to disable fast snapshot restores for one or more snapshots in specified Availability Zones",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableFastSnapshotRestores.html"
    },
    "DisableImageDeprecation": {
      "description": "Grants permission to cancel the deprecation of the specified AMI",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableImageDeprecation.html"
    },
    "DisableIpamOrganizationAdminAccount": {
      "description": "Grants permission to disable an AWS Organizations member account as an Amazon VPC IP Address Manager (IPAM) admin account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [
        "organizations:DeregisterDelegatedAdministrator"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableIpamOrganizationAdminAccount.html"
    },
    "DisableSerialConsoleAccess": {
      "description": "Grants permission to disable access to the EC2 serial console of all instances for your account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableSerialConsoleAccess.html"
    },
    "DisableTransitGatewayRouteTablePropagation": {
      "description": "Grants permission to disable a resource attachment from propagating routes to the specified propagation route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table-announcement": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableTransitGatewayRouteTablePropagation.html"
    },
    "DisableVgwRoutePropagation": {
      "description": "Grants permission to disable a virtual private gateway from propagating routes to a specified route table of a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        "vpn-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVgwRoutePropagation.html"
    },
    "DisableVpcClassicLink": {
      "description": "Grants permission to disable ClassicLink for a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVpcClassicLink.html"
    },
    "DisableVpcClassicLinkDnsSupport": {
      "description": "Grants permission to disable ClassicLink DNS support for a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVpcClassicLinkDnsSupport.html"
    },
    "DisassociateAddress": {
      "description": "Grants permission to disassociate an Elastic IP address from an instance or network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateAddress.html"
    },
    "DisassociateClientVpnTargetNetwork": {
      "description": "Grants permission to disassociate a target network from a Client VPN endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateClientVpnTargetNetwork.html"
    },
    "DisassociateEnclaveCertificateIamRole": {
      "description": "Grants permission to disassociate an ACM certificate from a IAM role",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "certificate": {
          "required": true,
          "conditionKeys": []
        },
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateEnclaveCertificateIamRole.html"
    },
    "DisassociateIamInstanceProfile": {
      "description": "Grants permission to disassociate an IAM instance profile from a running or stopped instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateIamInstanceProfile.html"
    },
    "DisassociateInstanceEventWindow": {
      "description": "Grants permission to disassociate one or more targets from an event window",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-event-window": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateInstanceEventWindow.html"
    },
    "DisassociateRouteTable": {
      "description": "Grants permission to disassociate a subnet from a route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "internet-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipv4pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipv6pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "vpn-gateway": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html"
    },
    "DisassociateSubnetCidrBlock": {
      "description": "Grants permission to disassociate a CIDR block from a subnet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateSubnetCidrBlock.html"
    },
    "DisassociateTransitGatewayMulticastDomain": {
      "description": "Grants permission to disassociate one or more subnets from a transit gateway multicast domain",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayMulticastDomain.html"
    },
    "DisassociateTransitGatewayPolicyTable": {
      "description": "Grants permission to disassociate a policy table from a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-policy-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayPolicyTable.html"
    },
    "DisassociateTransitGatewayRouteTable": {
      "description": "Grants permission to disassociate a resource attachment from a transit gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayRouteTable.html"
    },
    "DisassociateTrunkInterface": {
      "description": "Grants permission to disassociate a branch network interface to a trunk network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTrunkInterface.html"
    },
    "DisassociateVpcCidrBlock": {
      "description": "Grants permission to disassociate a CIDR block from a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateVpcCidrBlock.html"
    },
    "EnableAddressTransfer": {
      "description": "Grants permission to enable Elastic IP address transfer",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableAddressTransfer.html"
    },
    "EnableAwsNetworkPerformanceMetricSubscription": {
      "description": "Grants permission to enable infrastructure performance subscriptions",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableAwsNetworkPerformanceMetricSubscription.html"
    },
    "EnableEbsEncryptionByDefault": {
      "description": "Grants permission to enable EBS encryption by default for your account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableEbsEncryptionByDefault.html"
    },
    "EnableFastLaunch": {
      "description": "Grants permission to enable faster launching for Windows AMIs",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        "launch-template": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableFastLaunch.html"
    },
    "EnableFastSnapshotRestores": {
      "description": "Grants permission to enable fast snapshot restores for one or more snapshots in specified Availability Zones",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableFastSnapshotRestores.html"
    },
    "EnableImageDeprecation": {
      "description": "Grants permission to enable deprecation of the specified AMI at the specified date and time",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableImageDeprecation.html"
    },
    "EnableIpamOrganizationAdminAccount": {
      "description": "Grants permission to enable an AWS Organizations member account as an Amazon VPC IP Address Manager (IPAM) admin account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [
        "iam:CreateServiceLinkedRole",
        "organizations:EnableAWSServiceAccess",
        "organizations:RegisterDelegatedAdministrator"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableIpamOrganizationAdminAccount.html"
    },
    "EnableReachabilityAnalyzerOrganizationSharing": {
      "description": "Grants permission to enable organization sharing of reachability analyzer",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableReachabilityAnalyzerOrganizationSharing.html"
    },
    "EnableSerialConsoleAccess": {
      "description": "Grants permission to enable access to the EC2 serial console of all instances for your account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableSerialConsoleAccess.html"
    },
    "EnableTransitGatewayRouteTablePropagation": {
      "description": "Grants permission to enable an attachment to propagate routes to a propagation route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table-announcement": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableTransitGatewayRouteTablePropagation.html"
    },
    "EnableVgwRoutePropagation": {
      "description": "Grants permission to enable a virtual private gateway to propagate routes to a VPC route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        "vpn-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVgwRoutePropagation.html"
    },
    "EnableVolumeIO": {
      "description": "Grants permission to enable I/O operations for a volume that had I/O operations disabled",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "volume": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVolumeIO.html"
    },
    "EnableVpcClassicLink": {
      "description": "Grants permission to enable a VPC for ClassicLink",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVpcClassicLink.html"
    },
    "EnableVpcClassicLinkDnsSupport": {
      "description": "Grants permission to enable a VPC to support DNS hostname resolution for ClassicLink",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVpcClassicLinkDnsSupport.html"
    },
    "ExportClientVpnClientCertificateRevocationList": {
      "description": "Grants permission to download the client certificate revocation list for a Client VPN endpoint",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportClientVpnClientCertificateRevocationList.html"
    },
    "ExportClientVpnClientConfiguration": {
      "description": "Grants permission to download the contents of the Client VPN endpoint configuration file for a Client VPN endpoint",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportClientVpnClientConfiguration.html"
    },
    "ExportImage": {
      "description": "Grants permission to export an Amazon Machine Image (AMI) to a VM file",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "export-image-task": {
          "required": true,
          "conditionKeys": []
        },
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportImage.html"
    },
    "ExportTransitGatewayRoutes": {
      "description": "Grants permission to export routes from a transit gateway route table to an Amazon S3 bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportTransitGatewayRoutes.html"
    },
    "GetAssociatedEnclaveCertificateIamRoles": {
      "description": "Grants permission to get the list of roles associated with an ACM certificate",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "certificate": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetAssociatedEnclaveCertificateIamRoles.html"
    },
    "GetAssociatedIpv6PoolCidrs": {
      "description": "Grants permission to get information about the IPv6 CIDR block associations for a specified IPv6 address pool",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetAssociatedIpv6PoolCidrs.html"
    },
    "GetAwsNetworkPerformanceData": {
      "description": "Grants permission to get network performance data",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetAwsNetworkPerformanceData.html"
    },
    "GetCapacityReservationUsage": {
      "description": "Grants permission to get usage information about a Capacity Reservation",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:CapacityReservationFleet",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetCapacityReservationUsage.html"
    },
    "GetCoipPoolUsage": {
      "description": "Grants permission to describe the allocations from the specified customer-owned address pool",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "coip-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetCoipPoolUsage.html"
    },
    "GetConsoleOutput": {
      "description": "Grants permission to get the console output for an instance",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleOutput.html"
    },
    "GetConsoleScreenshot": {
      "description": "Grants permission to retrieve a JPG-format screenshot of a running instance",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleScreenshot.html"
    },
    "GetDefaultCreditSpecification": {
      "description": "Grants permission to get the default credit option for CPU usage of a burstable performance instance family",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetDefaultCreditSpecification.html"
    },
    "GetEbsDefaultKmsKeyId": {
      "description": "Grants permission to get the ID of the default customer master key (CMK) for EBS encryption by default",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsDefaultKmsKeyId.html"
    },
    "GetEbsEncryptionByDefault": {
      "description": "Grants permission to describe whether EBS encryption by default is enabled for your account",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsEncryptionByDefault.html"
    },
    "GetFlowLogsIntegrationTemplate": {
      "description": "Grants permission to generate a CloudFormation template to streamline the integration of VPC flow logs with Amazon Athena",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-flow-log": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetFlowLogsIntegrationTemplate.html"
    },
    "GetGroupsForCapacityReservation": {
      "description": "Grants permission to list the resource groups to which a Capacity Reservation has been added",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:CapacityReservationFleet",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetGroupsForCapacityReservation.html"
    },
    "GetHostReservationPurchasePreview": {
      "description": "Grants permission to preview a reservation purchase with configurations that match those of a Dedicated Host",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetHostReservationPurchasePreview.html"
    },
    "GetInstanceTypesFromInstanceRequirements": {
      "description": "Grants permission to view a list of instance types with specified instance attributes",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html"
    },
    "GetInstanceUefiData": {
      "description": "Grants permission to retrieve the binary representation of the UEFI variable store",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceUefiData.html"
    },
    "GetIpamAddressHistory": {
      "description": "Grants permission to retrieve historical information about a CIDR within an Amazon VPC IP Address Manager (IPAM) scope",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-scope": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamAddressHistory.html"
    },
    "GetIpamPoolAllocations": {
      "description": "Grants permission to get a list of all the CIDR allocations in an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamPoolAllocations.html"
    },
    "GetIpamPoolCidrs": {
      "description": "Grants permission to get the CIDRs provisioned to an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamPoolCidrs.html"
    },
    "GetIpamResourceCidrs": {
      "description": "Grants permission to get information about the resources in an Amazon VPC IP Address Manager (IPAM) scope",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipam-scope": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamResourceCidrs.html"
    },
    "GetLaunchTemplateData": {
      "description": "Grants permission to get the configuration data of the specified instance for use with a new launch template or launch template version",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetLaunchTemplateData.html"
    },
    "GetManagedPrefixListAssociations": {
      "description": "Grants permission to get information about the resources that are associated with the specified managed prefix list",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "prefix-list": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetManagedPrefixListAssociations.html"
    },
    "GetManagedPrefixListEntries": {
      "description": "Grants permission to get information about the entries for a specified managed prefix list",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "prefix-list": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetManagedPrefixListEntries.html"
    },
    "GetNetworkInsightsAccessScopeAnalysisFindings": {
      "description": "Grants permission to get the findings for one or more Network Access Scope analyses",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetNetworkInsightsAccessScopeAnalysisFindings.html"
    },
    "GetNetworkInsightsAccessScopeContent": {
      "description": "Grants permission to get the content for a specified Network Access Scope",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetNetworkInsightsAccessScopeContent.html"
    },
    "GetPasswordData": {
      "description": "Grants permission to retrieve the encrypted administrator password for a running Windows instance",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html"
    },
    "GetReservedInstancesExchangeQuote": {
      "description": "Grants permission to return a quote and exchange information for exchanging one or more Convertible Reserved Instances for a new Convertible Reserved Instance",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetReservedInstancesExchangeQuote.html"
    },
    "GetResourcePolicy": {
      "description": "Grants permission to describe an IAM policy that enables cross-account sharing",
      "accessLevel": "Read",
      "permissionOnly": true,
      "resourceTypes": {
        "ipam-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/vpc/latest/ipam/share-pool-ipam.html"
    },
    "GetSerialConsoleAccessStatus": {
      "description": "Grants permission to retrieve the access status of your account to the EC2 serial console of all instances",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSerialConsoleAccessStatus.html"
    },
    "GetSpotPlacementScores": {
      "description": "Grants permission to calculate the Spot placement score for a Region or Availability Zone based on the specified target capacity and compute requirements",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html"
    },
    "GetSubnetCidrReservations": {
      "description": "Grants permission to retrieve information about the subnet CIDR reservations",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSubnetCidrReservations.html"
    },
    "GetTransitGatewayAttachmentPropagations": {
      "description": "Grants permission to list the route tables to which a resource attachment propagates routes",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayAttachmentPropagations.html"
    },
    "GetTransitGatewayMulticastDomainAssociations": {
      "description": "Grants permission to get information about the associations for a transit gateway multicast domain",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-multicast-domain": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayMulticastDomainAssociations.html"
    },
    "GetTransitGatewayPolicyTableAssociations": {
      "description": "Grants permission to get information about associations for a transit gateway policy table",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-policy-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayPolicyTableAssociations.html"
    },
    "GetTransitGatewayPolicyTableEntries": {
      "description": "Grants permission to get information about associations for a transit gateway policy table entry",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-policy-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayPolicyTableEntries.html"
    },
    "GetTransitGatewayPrefixListReferences": {
      "description": "Grants permission to get information about prefix list references for a transit gateway route table",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayPrefixListReferences.html"
    },
    "GetTransitGatewayRouteTableAssociations": {
      "description": "Grants permission to get information about associations for a transit gateway route table",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTableAssociations.html"
    },
    "GetTransitGatewayRouteTablePropagations": {
      "description": "Grants permission to get information about the route table propagations for a transit gateway route table",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTablePropagations.html"
    },
    "GetVerifiedAccessEndpointPolicy": {
      "description": "Grants permission to show the Verified Access policy associated with the endpoint",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:DomainCertificateArn",
            "ec2:LoadBalancerArn",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetVerifiedAccessEndpointPolicy.html"
    },
    "GetVerifiedAccessGroupPolicy": {
      "description": "Grants permission to show the contents of the Verified Access policy associated with the group",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetVerifiedAccessGroupPolicy.html"
    },
    "GetVpnConnectionDeviceSampleConfiguration": {
      "description": "Grants permission to download an AWS-provided sample configuration file to be used with the customer gateway device",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "vpn-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpn-connection-device-type": {
          "required": false,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetVpnConnectionDeviceSampleConfiguration.html"
    },
    "GetVpnConnectionDeviceTypes": {
      "description": "Grants permission to obtain a list of customer gateway devices for which sample configuration files can be provided",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetVpnConnectionDeviceTypes.html"
    },
    "ImportClientVpnClientCertificateRevocationList": {
      "description": "Grants permission to upload a client certificate revocation list to a Client VPN endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportClientVpnClientCertificateRevocationList.html"
    },
    "ImportImage": {
      "description": "Grants permission to import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:RootDeviceType"
          ]
        },
        "import-image-task": {
          "required": true,
          "conditionKeys": []
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportImage.html"
    },
    "ImportInstance": {
      "description": "Grants permission to create an import instance task using metadata from a disk image",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:InstanceID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "volume": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html"
    },
    "ImportKeyPair": {
      "description": "Grants permission to import a public key from an RSA key pair that was created with a third-party tool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "key-pair": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html"
    },
    "ImportSnapshot": {
      "description": "Grants permission to import a disk into an EBS snapshot",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "import-snapshot-task": {
          "required": true,
          "conditionKeys": []
        },
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportSnapshot.html"
    },
    "ImportVolume": {
      "description": "Grants permission to create an import volume task using metadata from a disk image",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "volume": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportVolume.html"
    },
    "ListImagesInRecycleBin": {
      "description": "Grants permission to list Amazon Machine Images (AMIs) that are currently in the Recycle Bin",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ListImagesInRecycleBin.html"
    },
    "ListSnapshotsInRecycleBin": {
      "description": "Grants permission to list the Amazon EBS snapshots that are currently in the Recycle Bin",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ListSnapshotsInRecycleBin.html"
    },
    "ModifyAddressAttribute": {
      "description": "Grants permission to modify an attribute of the specified Elastic IP address",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyAddressAttribute.html"
    },
    "ModifyAvailabilityZoneGroup": {
      "description": "Grants permission to modify  the opt-in status of the Local Zone and Wavelength Zone group for your account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyAvailabilityZoneGroup.html"
    },
    "ModifyCapacityReservation": {
      "description": "Grants permission to modify a Capacity Reservation's capacity and the conditions under which it is to be released",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:CapacityReservationFleet",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyCapacityReservation.html"
    },
    "ModifyCapacityReservationFleet": {
      "description": "Grants permission to modify a Capacity Reservation Fleet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation-fleet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyCapacityReservationFleet.html"
    },
    "ModifyClientVpnEndpoint": {
      "description": "Grants permission to modify a Client VPN endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID"
          ]
        },
        "vpc": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyClientVpnEndpoint.html"
    },
    "ModifyDefaultCreditSpecification": {
      "description": "Grants permission to change the account level default credit option for CPU usage of burstable performance instances",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyDefaultCreditSpecification.html"
    },
    "ModifyEbsDefaultKmsKeyId": {
      "description": "Grants permission to change the default customer master key (CMK) for EBS encryption by default for your account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyEbsDefaultKmsKeyId.html"
    },
    "ModifyFleet": {
      "description": "Grants permission to modify an EC2 Fleet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "fleet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        "key-pair": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:KeyPairName",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "launch-template": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html"
    },
    "ModifyFpgaImageAttribute": {
      "description": "Grants permission to modify an attribute of an Amazon FPGA Image (AFI)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "fpga-image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFpgaImageAttribute.html"
    },
    "ModifyHosts": {
      "description": "Grants permission to modify a Dedicated Host",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "dedicated-host": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyHosts.html"
    },
    "ModifyIdFormat": {
      "description": "Grants permission to modify the ID format for a resource",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIdFormat.html"
    },
    "ModifyIdentityIdFormat": {
      "description": "Grants permission to modify the ID format of a resource for a specific principal in your account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIdentityIdFormat.html"
    },
    "ModifyImageAttribute": {
      "description": "Grants permission to modify an attribute of an Amazon Machine Image (AMI)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html"
    },
    "ModifyInstanceAttribute": {
      "description": "Grants permission to modify an attribute of an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "volume": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html"
    },
    "ModifyInstanceCapacityReservationAttributes": {
      "description": "Grants permission to modify the Capacity Reservation settings for a stopped instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCapacityReservationAttributes.html"
    },
    "ModifyInstanceCreditSpecification": {
      "description": "Grants permission to modify the credit option for CPU usage on an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html"
    },
    "ModifyInstanceEventStartTime": {
      "description": "Grants permission to modify the start time for a scheduled EC2 instance event",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute/${AttributeName}",
            "ec2:InstanceID",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceEventStartTime.html"
    },
    "ModifyInstanceEventWindow": {
      "description": "Grants permission to modify the specified event window",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-event-window": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceEventWindow.html"
    },
    "ModifyInstanceMaintenanceOptions": {
      "description": "Grants permission to modify the recovery behaviour for an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMaintenanceOptions.html"
    },
    "ModifyInstanceMetadataOptions": {
      "description": "Grants permission to modify the metadata options for an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html"
    },
    "ModifyInstancePlacement": {
      "description": "Grants permission to modify the placement attributes for an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "dedicated-host": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstancePlacement.html"
    },
    "ModifyIpam": {
      "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpam.html"
    },
    "ModifyIpamPool": {
      "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamPool.html"
    },
    "ModifyIpamResourceCidr": {
      "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) resource CIDR",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-scope": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamResourceCidr.html"
    },
    "ModifyIpamScope": {
      "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) scope",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-scope": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamScope.html"
    },
    "ModifyLaunchTemplate": {
      "description": "Grants permission to modify a launch template",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "launch-template": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyLaunchTemplate.html"
    },
    "ModifyLocalGatewayRoute": {
      "description": "Grants permission to modify a local gateway route",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "local-gateway-virtual-interface-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyLocalGatewayRoute.html"
    },
    "ModifyManagedPrefixList": {
      "description": "Grants permission to modify a managed prefix list",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "prefix-list": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyManagedPrefixList.html"
    },
    "ModifyNetworkInterfaceAttribute": {
      "description": "Grants permission to modify an attribute of a network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyNetworkInterfaceAttribute.html"
    },
    "ModifyPrivateDnsNameOptions": {
      "description": "Grants permission to modify the options for instance hostnames for the specified instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyPrivateDnsNameOptions.html"
    },
    "ModifyReservedInstances": {
      "description": "Grants permission to modify attributes of one or more Reserved Instances",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "reserved-instances": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:InstanceType",
            "ec2:ReservedInstancesOfferingType",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyReservedInstances.html"
    },
    "ModifySecurityGroupRules": {
      "description": "Grants permission to modify the rules of a security group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "prefix-list": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "security-group-rule": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySecurityGroupRules.html"
    },
    "ModifySnapshotAttribute": {
      "description": "Grants permission to add or remove permission settings for a snapshot",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Add/group",
            "ec2:Add/userId",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:Remove/group",
            "ec2:Remove/userId",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySnapshotAttribute.html"
    },
    "ModifySnapshotTier": {
      "description": "Grants permission to archive Amazon EBS snapshots",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySnapshotTier.html"
    },
    "ModifySpotFleetRequest": {
      "description": "Grants permission to modify a Spot Fleet request",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "launch-template": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "spot-fleet-request": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest.html"
    },
    "ModifySubnetAttribute": {
      "description": "Grants permission to modify an attribute of a subnet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySubnetAttribute.html"
    },
    "ModifyTrafficMirrorFilterNetworkServices": {
      "description": "Grants permission to allow or restrict mirroring network services",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "traffic-mirror-filter": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterNetworkServices.html"
    },
    "ModifyTrafficMirrorFilterRule": {
      "description": "Grants permission to modify a traffic mirror rule",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "traffic-mirror-filter": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-filter-rule": {
          "required": true,
          "conditionKeys": [
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterRule.html"
    },
    "ModifyTrafficMirrorSession": {
      "description": "Grants permission to modify a traffic mirror session",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "traffic-mirror-filter": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-session": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "traffic-mirror-target": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorSession.html"
    },
    "ModifyTransitGateway": {
      "description": "Grants permission to modify a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGateway.html"
    },
    "ModifyTransitGatewayPrefixListReference": {
      "description": "Grants permission to modify a transit gateway prefix list reference",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "prefix-list": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-attachment": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayPrefixListReference.html"
    },
    "ModifyTransitGatewayVpcAttachment": {
      "description": "Grants permission to modify a VPC attachment on a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID"
          ]
        },
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayVpcAttachment.html"
    },
    "ModifyVerifiedAccessEndpoint": {
      "description": "Grants permission to modify the configuration of a Verified Access endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "verified-access-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:DomainCertificateArn",
            "ec2:LoadBalancerArn",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVerifiedAccessEndpoint.html"
    },
    "ModifyVerifiedAccessEndpointPolicy": {
      "description": "Grants permission to modify the specified Verified Access endpoint policy",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:DomainCertificateArn",
            "ec2:LoadBalancerArn",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVerifiedAccessEndpointPolicy.html"
    },
    "ModifyVerifiedAccessGroup": {
      "description": "Grants permission to modify the specified Verified Access Group configuration",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-instance": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVerifiedAccessGroup.html"
    },
    "ModifyVerifiedAccessGroupPolicy": {
      "description": "Grants permission to modify the specified Verified Access group policy",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVerifiedAccessGroupPolicy.html"
    },
    "ModifyVerifiedAccessInstance": {
      "description": "Grants permission to modify the configuration of the specified Verified Access instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVerifiedAccessInstance.html"
    },
    "ModifyVerifiedAccessInstanceLoggingConfiguration": {
      "description": "Grants permission to modify the logging configuration for the specified Verified Access instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVerifiedAccessInstanceLoggingConfiguration.html"
    },
    "ModifyVerifiedAccessTrustProvider": {
      "description": "Grants permission to modify the configuration of the specified Verified Access trust provider",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "verified-access-trust-provider": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVerifiedAccessTrustProvider.html"
    },
    "ModifyVolume": {
      "description": "Grants permission to modify the parameters of an EBS volume",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "volume": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVolume.html"
    },
    "ModifyVolumeAttribute": {
      "description": "Grants permission to modify an attribute of a volume",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "volume": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVolumeAttribute.html"
    },
    "ModifyVpcAttribute": {
      "description": "Grants permission to modify an attribute of a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcAttribute.html"
    },
    "ModifyVpcEndpoint": {
      "description": "Grants permission to modify an attribute of a VPC endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID"
          ]
        },
        "vpc-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html"
    },
    "ModifyVpcEndpointConnectionNotification": {
      "description": "Grants permission to modify a connection notification for a VPC endpoint or VPC endpoint service",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "vpc-endpoint-service": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointConnectionNotification.html"
    },
    "ModifyVpcEndpointServiceConfiguration": {
      "description": "Grants permission to modify the attributes of a VPC endpoint service configuration",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint-service": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpceServicePrivateDnsName"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServiceConfiguration.html"
    },
    "ModifyVpcEndpointServicePayerResponsibility": {
      "description": "Grants permission to modify the payer responsibility for a VPC endpoint service",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint-service": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServicePayerResponsibility.html"
    },
    "ModifyVpcEndpointServicePermissions": {
      "description": "Grants permission to modify the permissions for a VPC endpoint service",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint-service": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServicePermissions.html"
    },
    "ModifyVpcPeeringConnectionOptions": {
      "description": "Grants permission to modify the VPC peering connection options on one side of a VPC peering connection",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-peering-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcPeeringConnectionOptions.html"
    },
    "ModifyVpcTenancy": {
      "description": "Grants permission to modify the instance tenancy attribute of a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcTenancy.html"
    },
    "ModifyVpnConnection": {
      "description": "Grants permission to modify the target gateway of a Site-to-Site VPN connection",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpn-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AuthenticationType",
            "ec2:DPDTimeoutSeconds",
            "ec2:GatewayType",
            "ec2:IKEVersions",
            "ec2:InsideTunnelCidr",
            "ec2:InsideTunnelIpv6Cidr",
            "ec2:Phase1DHGroup",
            "ec2:Phase1EncryptionAlgorithms",
            "ec2:Phase1IntegrityAlgorithms",
            "ec2:Phase1LifetimeSeconds",
            "ec2:Phase2DHGroup",
            "ec2:Phase2EncryptionAlgorithms",
            "ec2:Phase2IntegrityAlgorithms",
            "ec2:Phase2LifetimeSeconds",
            "ec2:PreSharedKeys",
            "ec2:RekeyFuzzPercentage",
            "ec2:RekeyMarginTimeSeconds",
            "ec2:ReplayWindowSizePackets",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RoutingType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnConnection.html"
    },
    "ModifyVpnConnectionOptions": {
      "description": "Grants permission to modify the connection options for your Site-to-Site VPN connection",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpn-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnConnectionOptions.html"
    },
    "ModifyVpnTunnelCertificate": {
      "description": "Grants permission to modify the certificate for a Site-to-Site VPN connection",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpn-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnTunnelCertificate.html"
    },
    "ModifyVpnTunnelOptions": {
      "description": "Grants permission to modify the options for a Site-to-Site VPN connection",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpn-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AuthenticationType",
            "ec2:DPDTimeoutSeconds",
            "ec2:GatewayType",
            "ec2:IKEVersions",
            "ec2:InsideTunnelCidr",
            "ec2:InsideTunnelIpv6Cidr",
            "ec2:Phase1DHGroup",
            "ec2:Phase1EncryptionAlgorithms",
            "ec2:Phase1IntegrityAlgorithms",
            "ec2:Phase1LifetimeSeconds",
            "ec2:Phase2DHGroup",
            "ec2:Phase2EncryptionAlgorithms",
            "ec2:Phase2IntegrityAlgorithms",
            "ec2:Phase2LifetimeSeconds",
            "ec2:PreSharedKeys",
            "ec2:RekeyFuzzPercentage",
            "ec2:RekeyMarginTimeSeconds",
            "ec2:ReplayWindowSizePackets",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RoutingType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnTunnelOptions.html"
    },
    "MonitorInstances": {
      "description": "Grants permission to enable detailed monitoring for a running instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MonitorInstances.html"
    },
    "MoveAddressToVpc": {
      "description": "Grants permission to move an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MoveAddressToVpc.html"
    },
    "MoveByoipCidrToIpam": {
      "description": "Grants permission to move a BYOIP IPv4 CIDR to Amazon VPC IP Address Manager (IPAM) from a public IPv4 pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MoveByoipCidrToIpam.html"
    },
    "ProvisionByoipCidr": {
      "description": "Grants permission to provision an address range for use in AWS through bring your own IP addresses (BYOIP), and to create a corresponding address pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionByoipCidr.html"
    },
    "ProvisionIpamPoolCidr": {
      "description": "Grants permission to provision a CIDR to an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionIpamPoolCidr.html"
    },
    "ProvisionPublicIpv4PoolCidr": {
      "description": "Grants permission to provision a CIDR to a public IPv4 pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipv4pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionPublicIpv4PoolCidr.html"
    },
    "PurchaseHostReservation": {
      "description": "Grants permission to purchase a reservation with configurations that match those of a Dedicated Host",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "dedicated-host": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PurchaseHostReservation.html"
    },
    "PurchaseReservedInstancesOffering": {
      "description": "Grants permission to purchase a Reserved Instance offering",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PurchaseReservedInstancesOffering.html"
    },
    "PurchaseScheduledInstances": {
      "description": "Grants permission to purchase one or more Scheduled Instances with a specified schedule",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PurchaseScheduledInstances.html"
    },
    "PutResourcePolicy": {
      "description": "Grants permission to attach an IAM policy that enables cross-account sharing to a resource",
      "accessLevel": "Write",
      "permissionOnly": true,
      "resourceTypes": {
        "ipam-pool": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "verified-access-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/vpc/latest/ipam/share-pool-ipam.html"
    },
    "RebootInstances": {
      "description": "Grants permission to request a reboot of one or more instances",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RebootInstances.html"
    },
    "RegisterImage": {
      "description": "Grants permission to register an Amazon Machine Image (AMI)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:Owner",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterImage.html"
    },
    "RegisterInstanceEventNotificationAttributes": {
      "description": "Grants permission to add tags to the set of tags to include in notifications about scheduled events for your instances",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterInstanceEventNotificationAttributes.html"
    },
    "RegisterTransitGatewayMulticastGroupMembers": {
      "description": "Grants permission to register one or more network interfaces as a member of a group IP address in a transit gateway multicast domain",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterTransitGatewayMulticastGroupMembers.html"
    },
    "RegisterTransitGatewayMulticastGroupSources": {
      "description": "Grants permission to register one or more network interfaces as a source of a group IP address in a transit gateway multicast domain",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterTransitGatewayMulticastGroupSources.html"
    },
    "RejectTransitGatewayMulticastDomainAssociations": {
      "description": "Grants permission to reject requests to associate cross-account subnets with a transit gateway multicast domain",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-multicast-domain": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayMulticastDomainAssociations.html"
    },
    "RejectTransitGatewayPeeringAttachment": {
      "description": "Grants permission to reject a transit gateway peering attachment request",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayPeeringAttachment.html"
    },
    "RejectTransitGatewayVpcAttachment": {
      "description": "Grants permission to reject a request to attach a VPC to a transit gateway",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayVpcAttachment.html"
    },
    "RejectVpcEndpointConnections": {
      "description": "Grants permission to reject one or more VPC endpoint connection requests to a VPC endpoint service",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint-service": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectVpcEndpointConnections.html"
    },
    "RejectVpcPeeringConnection": {
      "description": "Grants permission to reject a VPC peering connection request",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-peering-connection": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectVpcPeeringConnection.html"
    },
    "ReleaseAddress": {
      "description": "Grants permission to release an Elastic IP address",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseAddress.html"
    },
    "ReleaseHosts": {
      "description": "Grants permission to release one or more On-Demand Dedicated Hosts",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "dedicated-host": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseHosts.html"
    },
    "ReleaseIpamPoolAllocation": {
      "description": "Grants permission to release an allocation within an Amazon VPC IP Address Manager (IPAM) pool",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipam-pool": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseIpamPoolAllocation.html"
    },
    "ReplaceIamInstanceProfileAssociation": {
      "description": "Grants permission to replace an IAM instance profile for an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [
        "iam:PassRole"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceIamInstanceProfileAssociation.html"
    },
    "ReplaceNetworkAclAssociation": {
      "description": "Grants permission to change which network ACL a subnet is associated with",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-acl": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        },
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html"
    },
    "ReplaceNetworkAclEntry": {
      "description": "Grants permission to replace an entry (rule) in a network ACL",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-acl": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html"
    },
    "ReplaceRoute": {
      "description": "Grants permission to replace a route within a route table in a VPC",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRoute.html"
    },
    "ReplaceRouteTableAssociation": {
      "description": "Grants permission to change the route table that is associated with a subnet",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "ipv4pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "ipv6pool-ec2": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation.html"
    },
    "ReplaceTransitGatewayRoute": {
      "description": "Grants permission to replace a route in a transit gateway route table",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-attachment": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceTransitGatewayRoute.html"
    },
    "ReportInstanceStatus": {
      "description": "Grants permission to submit feedback about the status of an instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReportInstanceStatus.html"
    },
    "RequestSpotFleet": {
      "description": "Grants permission to create a Spot Fleet request",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        "key-pair": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "launch-template": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        },
        "spot-fleet-request": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html"
    },
    "RequestSpotInstances": {
      "description": "Grants permission to create a Spot Instance request",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        "key-pair": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        },
        "spot-instances-request": {
          "required": true,
          "conditionKeys": []
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html"
    },
    "ResetAddressAttribute": {
      "description": "Grants permission to reset the attribute of the specified IP address",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "elastic-ip": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetAddressAttribute.html"
    },
    "ResetEbsDefaultKmsKeyId": {
      "description": "Grants permission to reset the default customer master key (CMK) for EBS encryption for your account to use the AWS-managed CMK for EBS",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetEbsDefaultKmsKeyId.html"
    },
    "ResetFpgaImageAttribute": {
      "description": "Grants permission to reset an attribute of an Amazon FPGA Image (AFI) to its default value",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "fpga-image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetFpgaImageAttribute.html"
    },
    "ResetImageAttribute": {
      "description": "Grants permission to reset an attribute of an Amazon Machine Image (AMI) to its default value",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetImageAttribute.html"
    },
    "ResetInstanceAttribute": {
      "description": "Grants permission to reset an attribute of an instance to its default value",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetInstanceAttribute.html"
    },
    "ResetNetworkInterfaceAttribute": {
      "description": "Grants permission to reset an attribute of a network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetNetworkInterfaceAttribute.html"
    },
    "ResetSnapshotAttribute": {
      "description": "Grants permission to reset permission settings for a snapshot",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetSnapshotAttribute.html"
    },
    "RestoreAddressToClassic": {
      "description": "Grants permission to restore an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreAddressToClassic.html"
    },
    "RestoreImageFromRecycleBin": {
      "description": "Grants permission to restore an Amazon Machine Image (AMI) from the Recycle Bin",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreImageFromRecycleBin.html"
    },
    "RestoreManagedPrefixListVersion": {
      "description": "Grants permission to restore the entries from a previous version of a managed prefix list to a new version of the prefix list",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "prefix-list": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreManagedPrefixListVersion.html"
    },
    "RestoreSnapshotFromRecycleBin": {
      "description": "Grants permission to restore an Amazon EBS snapshot from the Recycle Bin",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreSnapshotFromRecycleBin.html"
    },
    "RestoreSnapshotTier": {
      "description": "Grants permission to restore an archived Amazon EBS snapshot for use temporarily or permanently, or modify the restore period or restore type for a snapshot that was previously temporarily restored",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "snapshot": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreSnapshotTier.html"
    },
    "RevokeClientVpnIngress": {
      "description": "Grants permission to remove an inbound authorization rule from a Client VPN endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeClientVpnIngress.html"
    },
    "RevokeSecurityGroupEgress": {
      "description": "Grants permission to remove one or more outbound rules from a VPC security group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupEgress.html"
    },
    "RevokeSecurityGroupIngress": {
      "description": "Grants permission to remove one or more inbound rules from a security group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupIngress.html"
    },
    "RunInstances": {
      "description": "Grants permission to launch one or more instances",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "capacity-reservation": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "elastic-gpu": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ElasticGpuType",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "elastic-inference": {
          "required": false,
          "conditionKeys": []
        },
        "group": {
          "required": false,
          "conditionKeys": []
        },
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        "instance": {
          "required": true,
          "conditionKeys": [
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "key-pair": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:LaunchTemplate",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "launch-template": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "license-configuration": {
          "required": false,
          "conditionKeys": []
        },
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AvailabilityZone",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:NetworkInterfaceID",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        },
        "subnet": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        "volume": {
          "required": true,
          "conditionKeys": [
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ParentSnapshot",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html"
    },
    "RunScheduledInstances": {
      "description": "Grants permission to launch one or more Scheduled Instances",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "image": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        "key-pair": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-interface": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        "placement-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "security-group": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        "snapshot": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        },
        "subnet": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunScheduledInstances.html"
    },
    "SearchLocalGatewayRoutes": {
      "description": "Grants permission to search for routes in a local gateway route table",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "local-gateway-route-table": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchLocalGatewayRoutes.html"
    },
    "SearchTransitGatewayMulticastGroups": {
      "description": "Grants permission to search for groups, sources, and members in a transit gateway multicast domain",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-multicast-domain": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html"
    },
    "SearchTransitGatewayRoutes": {
      "description": "Grants permission to search for routes in a transit gateway route table",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "transit-gateway-route-table": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html"
    },
    "SendDiagnosticInterrupt": {
      "description": "Grants permission to send a diagnostic interrupt to an Amazon EC2 instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SendDiagnosticInterrupt.html"
    },
    "SendSpotInstanceInterruptions": {
      "description": "Grants permission to interrupt a Spot Instance",
      "accessLevel": "Write",
      "permissionOnly": true,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html#send-spot-instance-interruptions"
    },
    "StartInstances": {
      "description": "Grants permission to start a stopped instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        "license-configuration": {
          "required": false,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartInstances.html"
    },
    "StartNetworkInsightsAccessScopeAnalysis": {
      "description": "Grants permission to start a Network Access Scope analysis",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-insights-access-scope": {
          "required": false,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        "network-insights-access-scope-analysis": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartNetworkInsightsAccessScopeAnalysis.html"
    },
    "StartNetworkInsightsAnalysis": {
      "description": "Grants permission to start analyzing a specified path",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-insights-analysis": {
          "required": true,
          "conditionKeys": []
        },
        "network-insights-path": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region"
      ],
      "dependentActions": [
        "ec2:CreateTags"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartNetworkInsightsAnalysis.html"
    },
    "StartVpcEndpointServicePrivateDnsVerification": {
      "description": "Grants permission to start the private DNS verification process for a VPC endpoint service",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "vpc-endpoint-service": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartVpcEndpointServicePrivateDnsVerification.html"
    },
    "StopInstances": {
      "description": "Grants permission to stop an Amazon EBS-backed instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StopInstances.html"
    },
    "TerminateClientVpnConnections": {
      "description": "Grants permission to terminate active Client VPN endpoint connections",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "client-vpn-endpoint": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateClientVpnConnections.html"
    },
    "TerminateInstances": {
      "description": "Grants permission to shut down one or more instances",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html"
    },
    "UnassignIpv6Addresses": {
      "description": "Grants permission to unassign one or more IPv6 addresses from a network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnassignIpv6Addresses.html"
    },
    "UnassignPrivateIpAddresses": {
      "description": "Grants permission to unassign one or more secondary private IP addresses from a network interface",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "network-interface": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnassignPrivateIpAddresses.html"
    },
    "UnmonitorInstances": {
      "description": "Grants permission to disable detailed monitoring for a running instance",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnmonitorInstances.html"
    },
    "UpdateSecurityGroupRuleDescriptionsEgress": {
      "description": "Grants permission to update descriptions for one or more outbound rules in a VPC security group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UpdateSecurityGroupRuleDescriptionsEgress.html"
    },
    "UpdateSecurityGroupRuleDescriptionsIngress": {
      "description": "Grants permission to update descriptions for one or more inbound rules in a security group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "security-group": {
          "required": true,
          "conditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      },
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UpdateSecurityGroupRuleDescriptionsIngress.html"
    },
    "WithdrawByoipCidr": {
      "description": "Grants permission to stop advertising an address range that was provisioned for use in AWS through bring your own IP addresses (BYOIP)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "ec2:Region"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_WithdrawByoipCidr.html"
    }
  },
  "resourceTypes": {
    "capacity-reservation": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:CapacityReservationFleet",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html"
    },
    "capacity-reservation-fleet": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "carrier-gateway": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "ec2:Vpc"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/Carrier_Gateway.html"
    },
    "certificate": {
      "arn": "arn:${Partition}:acm:${Region}:${Account}:certificate/${CertificateId}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/acm/latest/userguide/authen-overview.html#acm-resources-operations"
    },
    "client-vpn-endpoint": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ],
      "url": "https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/what-is.html"
    },
    "coip-pool": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:coip-pool/${Ipv4PoolCoipId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "customer-gateway": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html"
    },
    "dedicated-host": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AutoPlacement",
        "ec2:AvailabilityZone",
        "ec2:HostRecovery",
        "ec2:InstanceType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Quantity",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html"
    },
    "dhcp-options": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:DhcpOptionsID",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html"
    },
    "egress-only-internet-gateway": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/egress-only-internet-gateway.html"
    },
    "elastic-gpu": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:ElasticGpuType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html"
    },
    "elastic-inference": {
      "arn": "arn:${Partition}:elastic-inference:${Region}:${Account}:elastic-inference-accelerator/${AcceleratorId}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/elastic-inference/latest/developerguide/what-is-ei.html"
    },
    "elastic-ip": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AllocationId",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Domain",
        "ec2:PublicIpAddress",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html"
    },
    "export-image-task": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#export-vm-image"
    },
    "export-instance-task": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html"
    },
    "fleet": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet.html"
    },
    "fpga-image": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:fpga-image/${FpgaImageId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "group": {
      "arn": "arn:${Partition}:resource-groups:${Region}:${Account}:group/${GroupName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/ARG/latest/userguide/resource-groups.html"
    },
    "host-reservation": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:host-reservation/${HostReservationId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "image": {
      "arn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:ImageID",
        "ec2:ImageType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html"
    },
    "import-image-task": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#import-vm-image"
    },
    "import-snapshot-task": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-import-snapshot.html"
    },
    "instance": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceID",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:NewInstanceProfile",
        "ec2:PlacementGroup",
        "ec2:ProductCode",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Instances.html"
    },
    "instance-event-window": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "internet-gateway": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:InternetGatewayID",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html"
    },
    "ipam": {
      "arn": "arn:${Partition}:ec2::${Account}:ipam/${IpamId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "ipam-pool": {
      "arn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "ipam-scope": {
      "arn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "ipv4pool-ec2": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#ip-addressing-eips"
    },
    "ipv6pool-ec2": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#ipv6-addressing"
    },
    "key-pair": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:IsLaunchTemplateResource",
        "ec2:KeyPairName",
        "ec2:KeyPairType",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html"
    },
    "launch-template": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html"
    },
    "license-configuration": {
      "arn": "arn:${Partition}:license-manager:${Region}:${Account}:license-configuration:${LicenseConfigurationId}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/license-manager/latest/userguide/create-license-configuration.html"
    },
    "local-gateway": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/outposts-local-gateways.html#lgw"
    },
    "local-gateway-route-table": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/outposts-local-gateways.html#route-tables"
    },
    "local-gateway-route-table-virtual-interface-group-association": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/outposts-local-gateways.html"
    },
    "local-gateway-route-table-vpc-association": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/outposts-local-gateways.html#vpc-associations"
    },
    "local-gateway-virtual-interface": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/outposts-local-gateways.html"
    },
    "local-gateway-virtual-interface-group": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/outposts/latest/userguide/outposts-local-gateways.html"
    },
    "natgateway": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html"
    },
    "network-acl": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:NetworkAclID",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"
    },
    "network-insights-access-scope": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "network-insights-access-scope-analysis": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "network-insights-analysis": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "network-insights-path": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "network-interface": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AssociatePublicIpAddress",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AuthorizedService",
        "ec2:AuthorizedUser",
        "ec2:AvailabilityZone",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:NetworkInterfaceID",
        "ec2:Permission",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html"
    },
    "placement-group": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:PlacementGroupName",
        "ec2:PlacementGroupStrategy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html"
    },
    "prefix-list": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/managed-prefix-lists.html"
    },
    "replace-root-volume-task": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/replace-root.html"
    },
    "reserved-instances": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:InstanceType",
        "ec2:Region",
        "ec2:ReservedInstancesOfferingType",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-reserved-instances.html"
    },
    "role": {
      "arn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html"
    },
    "route-table": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RouteTableID",
        "ec2:Vpc"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html"
    },
    "security-group": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SecurityGroupID",
        "ec2:Vpc"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
    },
    "security-group-rule": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "snapshot": {
      "arn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Add/group",
        "ec2:Add/userId",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:OutpostArn",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:Remove/group",
        "ec2:Remove/userId",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotID",
        "ec2:SnapshotTime",
        "ec2:SourceOutpostArn",
        "ec2:VolumeSize"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html"
    },
    "spot-fleet-request": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "spot-instances-request": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html"
    },
    "subnet": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SubnetID",
        "ec2:Vpc"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html"
    },
    "subnet-cidr-reservation": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:subnet-cidr-reservation/${SubnetCidrReservationId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/subnet-cidr-reservation.html"
    },
    "traffic-mirror-filter": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-filter.html"
    },
    "traffic-mirror-filter-rule": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}",
      "conditionKeys": [
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-filter.html"
    },
    "traffic-mirror-session": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-session.html"
    },
    "traffic-mirror-target": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-target.html"
    },
    "transit-gateway": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/tgw/how-transit-gateways-work.html"
    },
    "transit-gateway-attachment": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/tgw/how-transit-gateways-work.html"
    },
    "transit-gateway-connect-peer": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "transit-gateway-multicast-domain": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-multicast-overview.html"
    },
    "transit-gateway-policy-table": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "transit-gateway-route-table": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/tgw/how-transit-gateways-work.html"
    },
    "transit-gateway-route-table-announcement": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "verified-access-endpoint": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-endpoint/${VerifiedAccessEndpointId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:DomainCertificateArn",
        "ec2:LoadBalancerArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "verified-access-group": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-group/${VerifiedAccessGroupId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "verified-access-instance": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-instance/${VerifiedAccessInstanceId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "verified-access-policy": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-policy/${VerifiedAccessPolicyId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "verified-access-trust-provider": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-trust-provider/${VerifiedAccessTrustProviderId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#EC2_ARN_Format"
    },
    "volume": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:IsLaunchTemplateResource",
        "ec2:KmsKeyId",
        "ec2:LaunchTemplate",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeID",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ],
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes.html"
    },
    "vpc": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Ipv4IpamPoolId",
        "ec2:Ipv6IpamPoolId",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "ec2:VpcID"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html"
    },
    "vpc-endpoint": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VpceServiceName",
        "ec2:VpceServiceOwner"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-services-overview.html"
    },
    "vpc-endpoint-connection": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-connection/${VpcEndpointConnectionId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-services-overview.html"
    },
    "vpc-endpoint-service": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VpceServicePrivateDnsName"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-services-overview.html"
    },
    "vpc-endpoint-service-permission": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service-permission/${VpcEndpointServicePermissionId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints-access.html#vpc-endpoint-policies"
    },
    "vpc-flow-log": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html"
    },
    "vpc-peering-connection": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AccepterVpc",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:RequesterVpc",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VpcPeeringConnectionID"
      ],
      "url": "https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html"
    },
    "vpn-connection": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AuthenticationType",
        "ec2:DPDTimeoutSeconds",
        "ec2:GatewayType",
        "ec2:IKEVersions",
        "ec2:InsideTunnelCidr",
        "ec2:InsideTunnelIpv6Cidr",
        "ec2:Phase1DHGroup",
        "ec2:Phase1EncryptionAlgorithms",
        "ec2:Phase1IntegrityAlgorithms",
        "ec2:Phase1LifetimeSeconds",
        "ec2:Phase2DHGroup",
        "ec2:Phase2EncryptionAlgorithms",
        "ec2:Phase2IntegrityAlgorithms",
        "ec2:Phase2LifetimeSeconds",
        "ec2:PreSharedKeys",
        "ec2:Region",
        "ec2:RekeyFuzzPercentage",
        "ec2:RekeyMarginTimeSeconds",
        "ec2:ReplayWindowSizePackets",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RoutingType"
      ],
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html"
    },
    "vpn-connection-device-type": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection-device-type/${VpnConnectionDeviceTypeId}",
      "conditionKeys": [
        "ec2:Region"
      ],
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html"
    },
    "vpn-gateway": {
      "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html"
    }
  },
  "conditionKeys": {
    "aws:RequestTag/${TagKey}": {
      "description": "Filters access by a tag key and value pair that is allowed in the request",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/supported-iam-actions-tagging.html#control-tagging"
    },
    "aws:ResourceTag/${TagKey}": {
      "description": "Filters access by a tag key and value pair of a resource",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/control-access-with-tags.html"
    },
    "aws:TagKeys": {
      "description": "Filters access by a list of tag keys that are allowed in the request",
      "type": "ArrayOfString",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/supported-iam-actions-tagging.html#control-tagging"
    },
    "ec2:AccepterVpc": {
      "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/vpc/latest/peering/security-iam.html"
    },
    "ec2:Add/group": {
      "description": "Filters access by the group being added to a snapshot",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Add/userId": {
      "description": "Filters access by the account id being added to a snapshot",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:AllocationId": {
      "description": "Filters access by the allocation ID of the Elastic IP address",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:AssociatePublicIpAddress": {
      "description": "Filters access by whether the user wants to associate a public IP address with the instance",
      "type": "Bool",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Attribute": {
      "description": "Filters access by an attribute of a resource",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Attribute/${AttributeName}": {
      "description": "Filters access by an attribute being set on a resource",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:AuthenticationType": {
      "description": "Filters access by the authentication type for the VPN tunnel endpoints",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:AuthorizedService": {
      "description": "Filters access by the AWS service that has permission to use a resource",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:AuthorizedUser": {
      "description": "Filters access by an IAM principal that has permission to use a resource",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:AutoPlacement": {
      "description": "Filters access by the Auto Placement properties of a Dedicated Host",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:AvailabilityZone": {
      "description": "Filters access by the name of an Availability Zone in an AWS Region",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:CapacityReservationFleet": {
      "description": "Filters access by the ARN of the Capacity Reservation Fleet",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:ClientRootCertificateChainArn": {
      "description": "Filters access by the ARN of the client root certificate chain",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:CloudwatchLogGroupArn": {
      "description": "Filters access by the ARN of the CloudWatch Logs log group",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:CloudwatchLogStreamArn": {
      "description": "Filters access by the ARN of the CloudWatch Logs log stream",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:CreateAction": {
      "description": "Filters access by the name of a resource-creating API action",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/supported-iam-actions-tagging.html"
    },
    "ec2:DPDTimeoutSeconds": {
      "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:DhcpOptionsID": {
      "description": "Filters access by the ID of a dynamic host configuration protocol (DHCP) options set",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:DirectoryArn": {
      "description": "Filters access by the ARN of the directory",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Domain": {
      "description": "Filters access by the domain of the Elastic IP address",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:DomainCertificateArn": {
      "description": "Filters access by the ARN of an Amazon Certificate Manager certificate",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:EbsOptimized": {
      "description": "Filters access by whether the instance is enabled for EBS optimization",
      "type": "Bool",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:ElasticGpuType": {
      "description": "Filters access by the type of Elastic Graphics accelerator",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Encrypted": {
      "description": "Filters access by whether the EBS volume is encrypted",
      "type": "Bool",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:GatewayType": {
      "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:HostRecovery": {
      "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:IKEVersions": {
      "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:ImageID": {
      "description": "Filters access by the ID of an image",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:ImageType": {
      "description": "Filters access by the type of image (machine, aki, or ari)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:InsideTunnelCidr": {
      "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:InsideTunnelIpv6Cidr": {
      "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:InstanceAutoRecovery": {
      "description": "Filters access by whether the instance type supports auto recovery",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:InstanceID": {
      "description": "Filters access by the ID of an instance",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:InstanceMarketType": {
      "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:InstanceMetadataTags": {
      "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:InstanceProfile": {
      "description": "Filters access by the ARN of an instance profile",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:InstanceType": {
      "description": "Filters access by the type of instance",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:InternetGatewayID": {
      "description": "Filters access by the ID of an internet gateway",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Ipv4IpamPoolId": {
      "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Ipv6IpamPoolId": {
      "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:IsLaunchTemplateResource": {
      "description": "Filters access by whether users are able to override resources that are specified in the launch template",
      "type": "Bool",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:KeyPairName": {
      "description": "Filters access by the name of a key pair",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:KeyPairType": {
      "description": "Filters access by the type of a key pair",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:KmsKeyId": {
      "description": "Filters access by the ID of an AWS KMS key",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:LaunchTemplate": {
      "description": "Filters access by the ARN of a launch template",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:LoadBalancerArn": {
      "description": "Filters access by the ARN of an Elastic Load Balancer",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:MetadataHttpEndpoint": {
      "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:MetadataHttpPutResponseHopLimit": {
      "description": "Filters access by the allowed number of hops when calling the instance metadata service",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:MetadataHttpTokens": {
      "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:NetworkAclID": {
      "description": "Filters access by the ID of a network access control list (ACL)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:NetworkInterfaceID": {
      "description": "Filters access by the ID of an elastic network interface",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:NewInstanceProfile": {
      "description": "Filters access by the ARN of the instance profile being attached",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:OutpostArn": {
      "description": "Filters access by the ARN of the Outpost",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Owner": {
      "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:ParentSnapshot": {
      "description": "Filters access by the ARN of the parent snapshot",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:ParentVolume": {
      "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Permission": {
      "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Phase1DHGroup": {
      "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:Phase1EncryptionAlgorithms": {
      "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:Phase1IntegrityAlgorithms": {
      "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:Phase1LifetimeSeconds": {
      "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:Phase2DHGroup": {
      "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:Phase2EncryptionAlgorithms": {
      "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:Phase2IntegrityAlgorithms": {
      "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:Phase2LifetimeSeconds": {
      "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:PlacementGroup": {
      "description": "Filters access by the ARN of the placement group",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:PlacementGroupName": {
      "description": "Filters access by the name of a placement group",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:PlacementGroupStrategy": {
      "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:PreSharedKeys": {
      "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:ProductCode": {
      "description": "Filters access by the product code that is associated with the AMI",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Public": {
      "description": "Filters access by whether the image has public launch permissions",
      "type": "Bool",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:PublicIpAddress": {
      "description": "Filters access by a public IP address",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Quantity": {
      "description": "Filters access by the number of Dedicated Hosts in a request",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Region": {
      "description": "Filters access by the name of the AWS Region",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:RekeyFuzzPercentage": {
      "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:RekeyMarginTimeSeconds": {
      "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:Remove/group": {
      "description": "Filters access by the group being removed from a snapshot",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Remove/userId": {
      "description": "Filters access by the account id being removed from a snapshot",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:ReplayWindowSizePackets": {
      "description": "Filters access by the number of packets in an IKE replay window",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:RequesterVpc": {
      "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/vpc/latest/peering/security-iam.html"
    },
    "ec2:ReservedInstancesOfferingType": {
      "description": "Filters access by the payment option of the Reserved Instance offering (No Upfront, Partial Upfront, or All Upfront)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-reserved-instances.html#ri-payment-options"
    },
    "ec2:ResourceTag/${TagKey}": {
      "description": "Filters access by a tag key and value pair of a resource",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/control-access-with-tags.html"
    },
    "ec2:RoleDelivery": {
      "description": "Filters access by the version of the instance metadata service for retrieving IAM role credentials for EC2",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:RootDeviceType": {
      "description": "Filters access by the root device type of the instance (ebs or instance-store)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:RouteTableID": {
      "description": "Filters access by the ID of a route table",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:RoutingType": {
      "description": "Filters access by the routing type for the VPN connection",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpn/latest/s2svpn/vpn-authentication-access-control.html"
    },
    "ec2:SamlProviderArn": {
      "description": "Filters access by the ARN of the IAM SAML identity provider",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:SecurityGroupID": {
      "description": "Filters access by the ID of a security group",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:ServerCertificateArn": {
      "description": "Filters access by the ARN of the server certificate",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:SnapshotID": {
      "description": "Filters access by the ID of a snapshot",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:SnapshotTime": {
      "description": "Filters access by the initiation time of a snapshot",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:SourceInstanceARN": {
      "description": "Filters access by the ARN of the instance from which the request originated",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:SourceOutpostArn": {
      "description": "Filters access by the ARN of the Outpost from which the request originated",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Subnet": {
      "description": "Filters access by the ARN of the subnet",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:SubnetID": {
      "description": "Filters access by the ID of a subnet",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Tenancy": {
      "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:VolumeID": {
      "description": "Filters access by the ID of a volume",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:VolumeIops": {
      "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:VolumeSize": {
      "description": "Filters access by the size of the volume, in GiB",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:VolumeThroughput": {
      "description": "Filters access by the throughput of the volume, in MiBps",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:VolumeType": {
      "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:Vpc": {
      "description": "Filters access by the ARN of the VPC",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:VpcID": {
      "description": "Filters access by the ID of a virtual private cloud (VPC)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:VpcPeeringConnectionID": {
      "description": "Filters access by the ID of a VPC peering connection",
      "type": "String",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/iam-policy-structure.html#amazon-ec2-keys"
    },
    "ec2:VpceServiceName": {
      "description": "Filters access by the name of the VPC endpoint service",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-iam.html"
    },
    "ec2:VpceServiceOwner": {
      "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-iam.html"
    },
    "ec2:VpceServicePrivateDnsName": {
      "description": "Filters access by the private DNS name of the VPC endpoint service",
      "type": "String",
      "url": "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-iam.html"
    }
  }
}