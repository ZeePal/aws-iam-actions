{
  "name": "Amazon S3 on Outposts",
  "prefix": "s3-outposts",
  "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3onoutposts.html",
  "actions": {
    "AbortMultipartUpload": {
      "description": "Grants permission to abort a multipart upload",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html"
    },
    "CreateAccessPoint": {
      "description": "Grants permission to create a new access point",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html"
    },
    "CreateBucket": {
      "description": "Grants permission to create a new bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html"
    },
    "CreateEndpoint": {
      "description": "Grants permission to create a new endpoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "endpoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_CreateEndpoint.html"
    },
    "DeleteAccessPoint": {
      "description": "Grants permission to delete the access point named in the URI",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html"
    },
    "DeleteAccessPointPolicy": {
      "description": "Grants permission to delete the policy on a specified access point",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html"
    },
    "DeleteBucket": {
      "description": "Grants permission to delete the bucket named in the URI",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html"
    },
    "DeleteBucketPolicy": {
      "description": "Grants permission to delete the policy on a specified bucket",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html"
    },
    "DeleteEndpoint": {
      "description": "Grants permission to delete the endpoint named in the URI",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "endpoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_DeleteEndpoint.html"
    },
    "DeleteObject": {
      "description": "Grants permission to remove the null version of an object and insert a delete marker, which becomes the current version of the object",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html"
    },
    "DeleteObjectTagging": {
      "description": "Grants permission to use the tagging subresource to remove the entire tag set from the specified object",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:ExistingObjectTag/<key>",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html"
    },
    "GetAccessPoint": {
      "description": "Grants permission to return configuration information about the specified access point",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html"
    },
    "GetAccessPointPolicy": {
      "description": "Grants permission to returns the access point policy associated with the specified access point",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html"
    },
    "GetBucket": {
      "description": "Grants permission to return the bucket configuration associated with an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html"
    },
    "GetBucketPolicy": {
      "description": "Grants permission to return the policy of the specified bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html"
    },
    "GetBucketTagging": {
      "description": "Grants permission to return the tag set associated with an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html"
    },
    "GetLifecycleConfiguration": {
      "description": "Grants permission to return the lifecycle configuration information set on an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html"
    },
    "GetObject": {
      "description": "Grants permission to retrieve objects from Amazon S3",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:ExistingObjectTag/<key>",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html"
    },
    "GetObjectTagging": {
      "description": "Grants permission to return the tag set of an object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:ExistingObjectTag/<key>",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html"
    },
    "ListAccessPoints": {
      "description": "Grants permission to list access points",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html"
    },
    "ListBucket": {
      "description": "Grants permission to list some or all of the objects in an Amazon S3 bucket (up to 1000)",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        },
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:delimiter",
        "s3-outposts:max-keys",
        "s3-outposts:prefix",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html"
    },
    "ListBucketMultipartUploads": {
      "description": "Grants permission to list in-progress multipart uploads",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        },
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html"
    },
    "ListEndpoints": {
      "description": "Grants permission to list endpoints",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_ListEndpoints.html"
    },
    "ListMultipartUploadParts": {
      "description": "Grants permission to list the parts that have been uploaded for a specific multipart upload",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html"
    },
    "ListRegionalBuckets": {
      "description": "Grants permission to list all buckets owned by the authenticated sender of the request",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListRegionalBuckets.html"
    },
    "ListSharedEndpoints": {
      "description": "Grants permission to list shared endpoints",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_ListSharedEndpoints.html"
    },
    "PutAccessPointPolicy": {
      "description": "Grants permission to associate an access policy with a specified access point",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html"
    },
    "PutBucketPolicy": {
      "description": "Grants permission to add or replace a bucket policy on a bucket",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html"
    },
    "PutBucketTagging": {
      "description": "Grants permission to add a set of tags to an existing Amazon S3 bucket",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html"
    },
    "PutLifecycleConfiguration": {
      "description": "Grants permission to create a new lifecycle configuration for the bucket or replace an existing lifecycle configuration",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html"
    },
    "PutObject": {
      "description": "Grants permission to add an object to a bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:RequestObjectTag/<key>",
        "s3-outposts:RequestObjectTagKeys",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-acl",
        "s3-outposts:x-amz-content-sha256",
        "s3-outposts:x-amz-copy-source",
        "s3-outposts:x-amz-metadata-directive",
        "s3-outposts:x-amz-server-side-encryption",
        "s3-outposts:x-amz-storage-class"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html"
    },
    "PutObjectAcl": {
      "description": "Grants permission to set the access control list (ACL) permissions for an object that already exists in a bucket",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:ExistingObjectTag/<key>",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-acl",
        "s3-outposts:x-amz-content-sha256",
        "s3-outposts:x-amz-storage-class"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html"
    },
    "PutObjectTagging": {
      "description": "Grants permission to set the supplied tag-set to an object that already exists in a bucket",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3-outposts:AccessPointNetworkOrigin",
        "s3-outposts:DataAccessPointAccount",
        "s3-outposts:DataAccessPointArn",
        "s3-outposts:ExistingObjectTag/<key>",
        "s3-outposts:RequestObjectTag/<key>",
        "s3-outposts:RequestObjectTagKeys",
        "s3-outposts:authType",
        "s3-outposts:signatureAge",
        "s3-outposts:signatureversion",
        "s3-outposts:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html"
    }
  },
  "resourceTypes": {
    "accesspoint": {
      "arn": "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/${OutpostId}/accesspoint/${AccessPointName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-points.html"
    },
    "bucket": {
      "arn": "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/${OutpostId}/bucket/${BucketName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html"
    },
    "endpoint": {
      "arn": "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/${OutpostId}/endpoint/${EndpointId}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/outposts-endpoints.html"
    },
    "object": {
      "arn": "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/${OutpostId}/bucket/${BucketName}/object/${ObjectName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingObjects.html"
    }
  },
  "conditionKeys": {
    "s3-outposts:AccessPointNetworkOrigin": {
      "description": "Filters access by the network origin (Internet or VPC)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/creating-access-points.html#access-points-policies"
    },
    "s3-outposts:DataAccessPointAccount": {
      "description": "Filters access by the AWS Account ID that owns the access point",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/creating-access-points.html#access-points-policies"
    },
    "s3-outposts:DataAccessPointArn": {
      "description": "Filters access by an access point Amazon Resource Name (ARN)",
      "type": "String",
      "url": null
    },
    "s3-outposts:ExistingObjectTag/<key>": {
      "description": "Filters access by requiring that an existing object tag has a specific tag key and value",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html#tagging-and-policies"
    },
    "s3-outposts:RequestObjectTag/<key>": {
      "description": "Filters access by restricting the tag keys and values allowed on objects",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html#tagging-and-policies"
    },
    "s3-outposts:RequestObjectTagKeys": {
      "description": "Filters access by restricting the tag keys allowed on objects",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html#tagging-and-policies"
    },
    "s3-outposts:authType": {
      "description": "Filters access by restricting incoming requests to a specific authentication method",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3-outposts:delimiter": {
      "description": "Filters access by requiring the delimiter parameter",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/walkthrough1.html"
    },
    "s3-outposts:max-keys": {
      "description": "Filters access by limiting the maximum number of keys returned in a ListBucket request",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/amazon-s3-policy-keys.html#example-numeric-condition-operators"
    },
    "s3-outposts:prefix": {
      "description": "Filters access by key name prefix",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/amazon-s3-policy-keys.html#condition-key-bucket-ops-2"
    },
    "s3-outposts:signatureAge": {
      "description": "Filters access by identifying the length of time, in milliseconds, that a signature is valid in an authenticated request",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3-outposts:signatureversion": {
      "description": "Filters access by identifying the version of AWS Signature that is supported for authenticated requests",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3-outposts:x-amz-acl": {
      "description": "Filters access by requiring the x-amz-acl header with a specific canned ACL in a request",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#permissions"
    },
    "s3-outposts:x-amz-content-sha256": {
      "description": "Filters access by disallowing unsigned content in your bucket",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3-outposts:x-amz-copy-source": {
      "description": "Filters access by restricting the copy source to a specific bucket, prefix, or object",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/amazon-s3-policy-keys.html#putobject-limit-copy-source-3"
    },
    "s3-outposts:x-amz-metadata-directive": {
      "description": "Filters access by enabling enforcement of object metadata behavior (COPY or REPLACE) when objects are copied",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html"
    },
    "s3-outposts:x-amz-server-side-encryption": {
      "description": "Filters access by requiring server-side encryption",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html"
    },
    "s3-outposts:x-amz-storage-class": {
      "description": "Filters access by storage class",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-howtoset"
    }
  }
}