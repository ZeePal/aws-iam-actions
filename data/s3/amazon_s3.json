{
  "name": "Amazon S3",
  "prefix": "s3",
  "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html",
  "actions": {
    "AbortMultipartUpload": {
      "description": "Grants permission to abort a multipart upload",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html"
    },
    "BypassGovernanceRetention": {
      "description": "Grants permission to allow circumvention of governance-mode object retention settings",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:RequestObjectTag/<key>",
        "s3:RequestObjectTagKeys",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:object-lock-legal-hold",
        "s3:object-lock-mode",
        "s3:object-lock-remaining-retention-days",
        "s3:object-lock-retain-until-date",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-acl",
        "s3:x-amz-content-sha256",
        "s3:x-amz-copy-source",
        "s3:x-amz-grant-full-control",
        "s3:x-amz-grant-read",
        "s3:x-amz-grant-read-acp",
        "s3:x-amz-grant-write",
        "s3:x-amz-grant-write-acp",
        "s3:x-amz-metadata-directive",
        "s3:x-amz-server-side-encryption",
        "s3:x-amz-server-side-encryption-aws-kms-key-id",
        "s3:x-amz-server-side-encryption-customer-algorithm",
        "s3:x-amz-storage-class",
        "s3:x-amz-website-redirect-location"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-bypass"
    },
    "CreateAccessPoint": {
      "description": "Grants permission to create a new access point",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:locationconstraint",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-acl",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html"
    },
    "CreateAccessPointForObjectLambda": {
      "description": "Grants permission to create an object lambda enabled accesspoint",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html"
    },
    "CreateBucket": {
      "description": "Grants permission to create a new bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:locationconstraint",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-acl",
        "s3:x-amz-content-sha256",
        "s3:x-amz-grant-full-control",
        "s3:x-amz-grant-read",
        "s3:x-amz-grant-read-acp",
        "s3:x-amz-grant-write",
        "s3:x-amz-grant-write-acp",
        "s3:x-amz-object-ownership"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html"
    },
    "CreateJob": {
      "description": "Grants permission to create a new Amazon S3 Batch Operations job",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "s3:RequestJobOperation",
        "s3:RequestJobPriority",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [
        "iam:PassRole"
      ],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html"
    },
    "CreateMultiRegionAccessPoint": {
      "description": "Grants permission to create a new Multi-Region Access Point",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "multiregionaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html"
    },
    "DeleteAccessPoint": {
      "description": "Grants permission to delete the access point named in the URI",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html"
    },
    "DeleteAccessPointForObjectLambda": {
      "description": "Grants permission to delete the object lambda enabled access point named in the URI",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html"
    },
    "DeleteAccessPointPolicy": {
      "description": "Grants permission to delete the policy on a specified access point",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html"
    },
    "DeleteAccessPointPolicyForObjectLambda": {
      "description": "Grants permission to delete the policy on a specified object lambda enabled access point",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html"
    },
    "DeleteBucket": {
      "description": "Grants permission to delete the bucket named in the URI",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html"
    },
    "DeleteBucketPolicy": {
      "description": "Grants permission to delete the policy on a specified bucket",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html"
    },
    "DeleteBucketWebsite": {
      "description": "Grants permission to remove the website configuration for a bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketWebsite.html"
    },
    "DeleteJobTagging": {
      "description": "Grants permission to remove tags from an existing Amazon S3 Batch Operations job",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "job": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ExistingJobOperation",
        "s3:ExistingJobPriority",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html"
    },
    "DeleteMultiRegionAccessPoint": {
      "description": "Grants permission to delete the Multi-Region Access Point named in the URI",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "multiregionaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html"
    },
    "DeleteObject": {
      "description": "Grants permission to remove the null version of an object and insert a delete marker, which becomes the current version of the object",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html"
    },
    "DeleteObjectTagging": {
      "description": "Grants permission to use the tagging subresource to remove the entire tag set from the specified object",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html"
    },
    "DeleteObjectVersion": {
      "description": "Grants permission to remove a specific version of an object",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html"
    },
    "DeleteObjectVersionTagging": {
      "description": "Grants permission to remove the entire tag set for a specific version of the object",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html"
    },
    "DeleteStorageLensConfiguration": {
      "description": "Grants permission to delete an existing Amazon S3 Storage Lens configuration",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "storagelensconfiguration": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteStorageLensConfiguration.html"
    },
    "DeleteStorageLensConfigurationTagging": {
      "description": "Grants permission to remove tags from an existing Amazon S3 Storage Lens configuration",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "storagelensconfiguration": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteStorageLensConfigurationTagging.html"
    },
    "DescribeJob": {
      "description": "Grants permission to retrieve the configuration parameters and status for a batch operations job",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "job": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html"
    },
    "DescribeMultiRegionAccessPointOperation": {
      "description": "Grants permission to retrieve the configurations for a Multi-Region Access Point",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "multiregionaccesspointrequestarn": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html"
    },
    "GetAccelerateConfiguration": {
      "description": "Grants permission to uses the accelerate subresource to return the Transfer Acceleration state of a bucket, which is either Enabled or Suspended",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html"
    },
    "GetAccessPoint": {
      "description": "Grants permission to return configuration information about the specified access point",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html"
    },
    "GetAccessPointConfigurationForObjectLambda": {
      "description": "Grants permission to retrieve the configuration of the object lambda enabled access point",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointConfigurationForObjectLambda.html"
    },
    "GetAccessPointForObjectLambda": {
      "description": "Grants permission to create an object lambda enabled accesspoint",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html"
    },
    "GetAccessPointPolicy": {
      "description": "Grants permission to returns the access point policy associated with the specified access point",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html"
    },
    "GetAccessPointPolicyForObjectLambda": {
      "description": "Grants permission to returns the access point policy associated with the specified object lambda enabled access point",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html"
    },
    "GetAccessPointPolicyStatus": {
      "description": "Grants permission to return the policy status for a specific access point policy",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyStatus.html"
    },
    "GetAccessPointPolicyStatusForObjectLambda": {
      "description": "Grants permission to return the policy status for a specific object lambda access point policy",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyStatusForObjectLambda.html"
    },
    "GetAccountPublicAccessBlock": {
      "description": "Grants permission to retrieve the PublicAccessBlock configuration for an AWS account",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html"
    },
    "GetAnalyticsConfiguration": {
      "description": "Grants permission to get an analytics configuration from an Amazon S3 bucket, identified by the analytics configuration ID",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html"
    },
    "GetBucketAcl": {
      "description": "Grants permission to use the acl subresource to return the access control list (ACL) of an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAcl.html"
    },
    "GetBucketCORS": {
      "description": "Grants permission to return the CORS configuration information set for an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketCors.html"
    },
    "GetBucketLocation": {
      "description": "Grants permission to return the Region that an Amazon S3 bucket resides in",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLocation.html"
    },
    "GetBucketLogging": {
      "description": "Grants permission to return the logging status of an Amazon S3 bucket and the permissions users have to view or modify that status",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html"
    },
    "GetBucketNotification": {
      "description": "Grants permission to get the notification configuration of an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketNotification.html"
    },
    "GetBucketObjectLockConfiguration": {
      "description": "Grants permission to get the Object Lock configuration of an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLockConfiguration.html"
    },
    "GetBucketOwnershipControls": {
      "description": "Grants permission to retrieve ownership controls on a bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketOwnershipControls.html"
    },
    "GetBucketPolicy": {
      "description": "Grants permission to return the policy of the specified bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicy.html"
    },
    "GetBucketPolicyStatus": {
      "description": "Grants permission to retrieve the policy status for a specific Amazon S3 bucket, which indicates whether the bucket is public",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicyStatus.html"
    },
    "GetBucketPublicAccessBlock": {
      "description": "Grants permission to retrieve the PublicAccessBlock configuration for an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html"
    },
    "GetBucketRequestPayment": {
      "description": "Grants permission to return the request payment configuration for an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketRequestPayment.html"
    },
    "GetBucketTagging": {
      "description": "Grants permission to return the tag set associated with an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html"
    },
    "GetBucketVersioning": {
      "description": "Grants permission to return the versioning state of an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html"
    },
    "GetBucketWebsite": {
      "description": "Grants permission to return the website configuration for an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketWebsite.html"
    },
    "GetEncryptionConfiguration": {
      "description": "Grants permission to return the default encryption configuration an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html"
    },
    "GetIntelligentTieringConfiguration": {
      "description": "Grants permission to get an or list all Amazon S3 Intelligent Tiering configuration in a S3 Bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html"
    },
    "GetInventoryConfiguration": {
      "description": "Grants permission to return an inventory configuration from an Amazon S3 bucket, identified by the inventory configuration ID",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html"
    },
    "GetJobTagging": {
      "description": "Grants permission to return the tag set of an existing Amazon S3 Batch Operations job",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "job": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html"
    },
    "GetLifecycleConfiguration": {
      "description": "Grants permission to return the lifecycle configuration information set on an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html"
    },
    "GetMetricsConfiguration": {
      "description": "Grants permission to get a metrics configuration from an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html"
    },
    "GetMultiRegionAccessPoint": {
      "description": "Grants permission to return configuration information about the specified Multi-Region Access Point",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "multiregionaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html"
    },
    "GetMultiRegionAccessPointPolicy": {
      "description": "Grants permission to returns the access point policy associated with the specified Multi-Region Access Point",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "multiregionaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html"
    },
    "GetMultiRegionAccessPointPolicyStatus": {
      "description": "Grants permission to return the policy status for a specific Multi-Region Access Point policy",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "multiregionaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html"
    },
    "GetMultiRegionAccessPointRoutes": {
      "description": "Grants permission to return the route configuration for a Multi-Region Access Point",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "multiregionaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointRoutes.html"
    },
    "GetObject": {
      "description": "Grants permission to retrieve objects from Amazon S3",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html"
    },
    "GetObjectAcl": {
      "description": "Grants permission to return the access control list (ACL) of an object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html"
    },
    "GetObjectAttributes": {
      "description": "Grants permission to retrieve attributes related to a specific object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html"
    },
    "GetObjectLegalHold": {
      "description": "Grants permission to get an object's current Legal Hold status",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLegalHold.html"
    },
    "GetObjectRetention": {
      "description": "Grants permission to retrieve the retention settings for an object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectRetention.html"
    },
    "GetObjectTagging": {
      "description": "Grants permission to return the tag set of an object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html"
    },
    "GetObjectTorrent": {
      "description": "Grants permission to return torrent files from an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTorrent.html"
    },
    "GetObjectVersion": {
      "description": "Grants permission to retrieve a specific version of an object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html"
    },
    "GetObjectVersionAcl": {
      "description": "Grants permission to return the access control list (ACL) of a specific object version",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html"
    },
    "GetObjectVersionAttributes": {
      "description": "Grants permission to retrieve attributes related to a specific version of an object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html"
    },
    "GetObjectVersionForReplication": {
      "description": "Grants permission to replicate both unencrypted objects and objects encrypted with SSE-S3 or SSE-KMS",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-config-for-kms-objects.html"
    },
    "GetObjectVersionTagging": {
      "description": "Grants permission to return the tag set for a specific version of the object",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html"
    },
    "GetObjectVersionTorrent": {
      "description": "Grants permission to get Torrent files about a different version using the versionId subresource",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTorrent.html"
    },
    "GetReplicationConfiguration": {
      "description": "Grants permission to get the replication configuration information set on an Amazon S3 bucket",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html"
    },
    "GetStorageLensConfiguration": {
      "description": "Grants permission to get an Amazon S3 Storage Lens configuration",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "storagelensconfiguration": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetStorageLensConfiguration.html"
    },
    "GetStorageLensConfigurationTagging": {
      "description": "Grants permission to get the tag set of an existing Amazon S3 Storage Lens configuration",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "storagelensconfiguration": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetStorageLensConfigurationTagging.html"
    },
    "GetStorageLensDashboard": {
      "description": "Grants permission to get an Amazon S3 Storage Lens dashboard",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "storagelensconfiguration": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_dashboard.html"
    },
    "InitiateReplication": {
      "description": "Grants permission to initiate the replication process by setting replication status of an object to pending",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html"
    },
    "ListAccessPoints": {
      "description": "Grants permission to list access points",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html"
    },
    "ListAccessPointsForObjectLambda": {
      "description": "Grants permission to list object lambda enabled accesspoints",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html"
    },
    "ListAllMyBuckets": {
      "description": "Grants permission to list all buckets owned by the authenticated sender of the request",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html"
    },
    "ListBucket": {
      "description": "Grants permission to list some or all of the objects in an Amazon S3 bucket (up to 1000)",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:delimiter",
        "s3:max-keys",
        "s3:prefix",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html"
    },
    "ListBucketMultipartUploads": {
      "description": "Grants permission to list in-progress multipart uploads",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html"
    },
    "ListBucketVersions": {
      "description": "Grants permission to list metadata about all the versions of objects in an Amazon S3 bucket",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:delimiter",
        "s3:max-keys",
        "s3:prefix",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectVersions.html"
    },
    "ListJobs": {
      "description": "Grants permission to list current jobs and jobs that have ended recently",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html"
    },
    "ListMultiRegionAccessPoints": {
      "description": "Grants permission to list Multi-Region Access Points",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html"
    },
    "ListMultipartUploadParts": {
      "description": "Grants permission to list the parts that have been uploaded for a specific multipart upload",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html"
    },
    "ListStorageLensConfigurations": {
      "description": "Grants permission to list Amazon S3 Storage Lens configurations",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListStorageLensConfigurations.html"
    },
    "ObjectOwnerOverrideToBucketOwner": {
      "description": "Grants permission to change replica ownership",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-change-owner.html#repl-ownership-add-role-permission"
    },
    "PutAccelerateConfiguration": {
      "description": "Grants permission to use the accelerate subresource to set the Transfer Acceleration state of an existing S3 bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html"
    },
    "PutAccessPointConfigurationForObjectLambda": {
      "description": "Grants permission to set the configuration of the object lambda enabled access point",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointConfigurationForObjectLambda.html"
    },
    "PutAccessPointPolicy": {
      "description": "Grants permission to associate an access policy with a specified access point",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "accesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html"
    },
    "PutAccessPointPolicyForObjectLambda": {
      "description": "Grants permission to associate an access policy with a specified object lambda enabled access point",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "objectlambdaaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html"
    },
    "PutAccessPointPublicAccessBlock": {
      "description": "Grants permission to associate public access block configurations with a specified access point, while creating a access point",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html#access-control-block-public-access-examples-access-point"
    },
    "PutAccountPublicAccessBlock": {
      "description": "Grants permission to create or modify the PublicAccessBlock configuration for an AWS account",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html"
    },
    "PutAnalyticsConfiguration": {
      "description": "Grants permission to set an analytics configuration for the bucket, specified by the analytics configuration ID",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html"
    },
    "PutBucketAcl": {
      "description": "Grants permission to set the permissions on an existing bucket using access control lists (ACLs)",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-acl",
        "s3:x-amz-content-sha256",
        "s3:x-amz-grant-full-control",
        "s3:x-amz-grant-read",
        "s3:x-amz-grant-read-acp",
        "s3:x-amz-grant-write",
        "s3:x-amz-grant-write-acp"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html"
    },
    "PutBucketCORS": {
      "description": "Grants permission to set the CORS configuration for an Amazon S3 bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html"
    },
    "PutBucketLogging": {
      "description": "Grants permission to set the logging parameters for an Amazon S3 bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLogging.html"
    },
    "PutBucketNotification": {
      "description": "Grants permission to receive notifications when certain events happen in an Amazon S3 bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketNotification.html"
    },
    "PutBucketObjectLockConfiguration": {
      "description": "Grants permission to put Object Lock configuration on a specific bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectLockConfiguration.html"
    },
    "PutBucketOwnershipControls": {
      "description": "Grants permission to add, replace or delete ownership controls on a bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketOwnershipControls.html"
    },
    "PutBucketPolicy": {
      "description": "Grants permission to add or replace a bucket policy on a bucket",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html"
    },
    "PutBucketPublicAccessBlock": {
      "description": "Grants permission to create or modify the PublicAccessBlock configuration for a specific Amazon S3 bucket",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html"
    },
    "PutBucketRequestPayment": {
      "description": "Grants permission to set the request payment configuration of a bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketRequestPayment.html"
    },
    "PutBucketTagging": {
      "description": "Grants permission to add a set of tags to an existing Amazon S3 bucket",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html"
    },
    "PutBucketVersioning": {
      "description": "Grants permission to set the versioning state of an existing Amazon S3 bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html"
    },
    "PutBucketWebsite": {
      "description": "Grants permission to set the configuration of the website that is specified in the website subresource",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html"
    },
    "PutEncryptionConfiguration": {
      "description": "Grants permission to set the encryption configuration for an Amazon S3 bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html"
    },
    "PutIntelligentTieringConfiguration": {
      "description": "Grants permission to create new or update or delete an existing Amazon S3 Intelligent Tiering configuration",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html"
    },
    "PutInventoryConfiguration": {
      "description": "Grants permission to add an inventory configuration to the bucket, identified by the inventory ID",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html"
    },
    "PutJobTagging": {
      "description": "Grants permission to replace tags on an existing Amazon S3 Batch Operations job",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "job": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "s3:ExistingJobOperation",
        "s3:ExistingJobPriority",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html"
    },
    "PutLifecycleConfiguration": {
      "description": "Grants permission to create a new lifecycle configuration for the bucket or replace an existing lifecycle configuration",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html"
    },
    "PutMetricsConfiguration": {
      "description": "Grants permission to set or update a metrics configuration for the CloudWatch request metrics from an Amazon S3 bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html"
    },
    "PutMultiRegionAccessPointPolicy": {
      "description": "Grants permission to associate an access policy with a specified Multi-Region Access Point",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "multiregionaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html"
    },
    "PutObject": {
      "description": "Grants permission to add an object to a bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:RequestObjectTag/<key>",
        "s3:RequestObjectTagKeys",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:object-lock-legal-hold",
        "s3:object-lock-mode",
        "s3:object-lock-remaining-retention-days",
        "s3:object-lock-retain-until-date",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-acl",
        "s3:x-amz-content-sha256",
        "s3:x-amz-copy-source",
        "s3:x-amz-grant-full-control",
        "s3:x-amz-grant-read",
        "s3:x-amz-grant-read-acp",
        "s3:x-amz-grant-write",
        "s3:x-amz-grant-write-acp",
        "s3:x-amz-metadata-directive",
        "s3:x-amz-server-side-encryption",
        "s3:x-amz-server-side-encryption-aws-kms-key-id",
        "s3:x-amz-server-side-encryption-customer-algorithm",
        "s3:x-amz-storage-class",
        "s3:x-amz-website-redirect-location"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html"
    },
    "PutObjectAcl": {
      "description": "Grants permission to set the access control list (ACL) permissions for new or existing objects in an S3 bucket",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-acl",
        "s3:x-amz-content-sha256",
        "s3:x-amz-grant-full-control",
        "s3:x-amz-grant-read",
        "s3:x-amz-grant-read-acp",
        "s3:x-amz-grant-write",
        "s3:x-amz-grant-write-acp",
        "s3:x-amz-storage-class"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html"
    },
    "PutObjectLegalHold": {
      "description": "Grants permission to apply a Legal Hold configuration to the specified object",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:object-lock-legal-hold",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectLegalHold.html"
    },
    "PutObjectRetention": {
      "description": "Grants permission to place an Object Retention configuration on an object",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:object-lock-mode",
        "s3:object-lock-remaining-retention-days",
        "s3:object-lock-retain-until-date",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectRetention.html"
    },
    "PutObjectTagging": {
      "description": "Grants permission to set the supplied tag-set to an object that already exists in a bucket",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:RequestObjectTag/<key>",
        "s3:RequestObjectTagKeys",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html"
    },
    "PutObjectVersionAcl": {
      "description": "Grants permission to use the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-acl",
        "s3:x-amz-content-sha256",
        "s3:x-amz-grant-full-control",
        "s3:x-amz-grant-read",
        "s3:x-amz-grant-read-acp",
        "s3:x-amz-grant-write",
        "s3:x-amz-grant-write-acp",
        "s3:x-amz-storage-class"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html"
    },
    "PutObjectVersionTagging": {
      "description": "Grants permission to set the supplied tag-set for a specific version of an object",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingObjectTag/<key>",
        "s3:RequestObjectTag/<key>",
        "s3:RequestObjectTagKeys",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html"
    },
    "PutReplicationConfiguration": {
      "description": "Grants permission to create a new replication configuration or replace an existing one",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "bucket": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [
        "iam:PassRole"
      ],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html"
    },
    "PutStorageLensConfiguration": {
      "description": "Grants permission to create or update an Amazon S3 Storage Lens configuration",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutStorageLensConfiguration.html"
    },
    "PutStorageLensConfigurationTagging": {
      "description": "Grants permission to put or replace tags on an existing Amazon S3 Storage Lens configuration",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "storagelensconfiguration": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutStorageLensConfigurationTagging.html"
    },
    "ReplicateDelete": {
      "description": "Grants permission to replicate delete markers to the destination bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html"
    },
    "ReplicateObject": {
      "description": "Grants permission to replicate objects and object tags to the destination bucket",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256",
        "s3:x-amz-server-side-encryption",
        "s3:x-amz-server-side-encryption-aws-kms-key-id",
        "s3:x-amz-server-side-encryption-customer-algorithm"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html"
    },
    "ReplicateTags": {
      "description": "Grants permission to replicate object tags to the destination bucket",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html"
    },
    "RestoreObject": {
      "description": "Grants permission to restore an archived copy of an object back into Amazon S3",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "object": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html"
    },
    "SubmitMultiRegionAccessPointRoutes": {
      "description": "Grants permission to submit a route configuration update for a Multi-Region Access Point",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "multiregionaccesspoint": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_SubmitMultiRegionAccessPointRoutes.html"
    },
    "UpdateJobPriority": {
      "description": "Grants permission to update the priority of an existing job",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "job": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ExistingJobOperation",
        "s3:ExistingJobPriority",
        "s3:RequestJobPriority",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html"
    },
    "UpdateJobStatus": {
      "description": "Grants permission to update the status for the specified job",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "job": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "s3:ExistingJobOperation",
        "s3:ExistingJobPriority",
        "s3:JobSuspendedCause",
        "s3:ResourceAccount",
        "s3:TlsVersion",
        "s3:authType",
        "s3:signatureAge",
        "s3:signatureversion",
        "s3:x-amz-content-sha256"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html"
    }
  },
  "resourceTypes": {
    "accesspoint": {
      "arn": "arn:${Partition}:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html"
    },
    "bucket": {
      "arn": "arn:${Partition}:s3:::${BucketName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingBucket.html"
    },
    "job": {
      "arn": "arn:${Partition}:s3:${Region}:${Account}:job/${JobId}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-managing-jobs.html"
    },
    "multiregionaccesspoint": {
      "arn": "arn:${Partition}:s3::${Account}:accesspoint/${AccessPointAlias}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointRequests.html"
    },
    "multiregionaccesspointrequestarn": {
      "arn": "arn:${Partition}:s3:us-west-2:${Account}:async-request/mrap/${Operation}/${Token}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointRequests.html"
    },
    "object": {
      "arn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingObjects.html"
    },
    "objectlambdaaccesspoint": {
      "arn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html"
    },
    "storagelensconfiguration": {
      "arn": "arn:${Partition}:s3:${Region}:${Account}:storage-lens/${ConfigId}",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens.html"
    }
  },
  "conditionKeys": {
    "aws:RequestTag/${TagKey}": {
      "description": "Filters access by the tags that are passed in the request",
      "type": "String",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag"
    },
    "aws:ResourceTag/${TagKey}": {
      "description": "Filters access by the tags associated with the resource",
      "type": "String",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag"
    },
    "aws:TagKeys": {
      "description": "Filters access by the tag keys that are passed in the request",
      "type": "ArrayOfString",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys"
    },
    "s3:AccessPointNetworkOrigin": {
      "description": "Filters access by the network origin (Internet or VPC)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies"
    },
    "s3:DataAccessPointAccount": {
      "description": "Filters access by the AWS Account ID that owns the access point",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies"
    },
    "s3:DataAccessPointArn": {
      "description": "Filters access by an access point Amazon Resource Name (ARN)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html#access-points-policies"
    },
    "s3:ExistingJobOperation": {
      "description": "Filters access by operation to updating the job priority",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html"
    },
    "s3:ExistingJobPriority": {
      "description": "Filters access by priority range to cancelling existing jobs",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html"
    },
    "s3:ExistingObjectTag/<key>": {
      "description": "Filters access by existing object tag key and value",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies"
    },
    "s3:JobSuspendedCause": {
      "description": "Filters access by a specific job suspended cause (for example, AWAITING_CONFIRMATION) to cancelling suspended jobs",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html"
    },
    "s3:RequestJobOperation": {
      "description": "Filters access by operation to creating jobs",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html"
    },
    "s3:RequestJobPriority": {
      "description": "Filters access by priority range to creating new jobs",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops-job-tags-examples.html"
    },
    "s3:RequestObjectTag/<key>": {
      "description": "Filters access by the tag keys and values to be added to objects",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies"
    },
    "s3:RequestObjectTagKeys": {
      "description": "Filters access by the tag keys to be added to objects",
      "type": "ArrayOfString",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html#tagging-and-policies"
    },
    "s3:ResourceAccount": {
      "description": "Filters access by the resource owner AWS account ID",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-object-resource-account"
    },
    "s3:TlsVersion": {
      "description": "Filters access by the TLS version used by the client",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html#example-object-tls-version"
    },
    "s3:authType": {
      "description": "Filters access by authentication method",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3:delimiter": {
      "description": "Filters access by delimiter parameter",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/walkthrough1.html"
    },
    "s3:locationconstraint": {
      "description": "Filters access by a specific Region",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#condition-key-bucket-ops-1"
    },
    "s3:max-keys": {
      "description": "Filters access by maximum number of keys returned in a ListBucket request",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#example-numeric-condition-operators"
    },
    "s3:object-lock-legal-hold": {
      "description": "Filters access by object legal hold status",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-legal-holds"
    },
    "s3:object-lock-mode": {
      "description": "Filters access by object retention mode (COMPLIANCE or GOVERNANCE)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-retention-modes"
    },
    "s3:object-lock-remaining-retention-days": {
      "description": "Filters access by remaining object retention days",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-retention-limits"
    },
    "s3:object-lock-retain-until-date": {
      "description": "Filters access by object retain-until date",
      "type": "Date",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html#object-lock-retention-periods"
    },
    "s3:prefix": {
      "description": "Filters access by key name prefix",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#condition-key-bucket-ops-2"
    },
    "s3:signatureAge": {
      "description": "Filters access by the age in milliseconds of the request signature",
      "type": "Numeric",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3:signatureversion": {
      "description": "Filters access by the version of AWS Signature used on the request",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3:versionid": {
      "description": "Filters access by a specific object version",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#getobjectversion-limit-access-to-specific-version-3"
    },
    "s3:x-amz-acl": {
      "description": "Filters access by canned ACL in the request's x-amz-acl header",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions"
    },
    "s3:x-amz-content-sha256": {
      "description": "Filters access by unsigned content in your bucket",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/bucket-policy-s3-sigv4-conditions.html"
    },
    "s3:x-amz-copy-source": {
      "description": "Filters access by copy source bucket, prefix, or object in the copy object requests",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#putobject-limit-copy-source-3"
    },
    "s3:x-amz-grant-full-control": {
      "description": "Filters access by x-amz-grant-full-control (full control) header",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions"
    },
    "s3:x-amz-grant-read": {
      "description": "Filters access by x-amz-grant-read (read access) header",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions"
    },
    "s3:x-amz-grant-read-acp": {
      "description": "Filters access by the x-amz-grant-read-acp (read permissions for the ACL) header",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions"
    },
    "s3:x-amz-grant-write": {
      "description": "Filters access by the x-amz-grant-write (write access) header",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions"
    },
    "s3:x-amz-grant-write-acp": {
      "description": "Filters access by the x-amz-grant-write-acp (write permissions for the ACL) header",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#permissions"
    },
    "s3:x-amz-metadata-directive": {
      "description": "Filters access by object metadata behavior (COPY or REPLACE) when objects are copied",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html"
    },
    "s3:x-amz-object-ownership": {
      "description": "Filters access by Object Ownership",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/ensure-object-ownership.html#object-ownership-requiring-bucket-owner-enforced"
    },
    "s3:x-amz-server-side-encryption": {
      "description": "Filters access by server-side encryption",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingServerSideEncryption.html"
    },
    "s3:x-amz-server-side-encryption-aws-kms-key-id": {
      "description": "Filters access by AWS KMS customer managed CMK for server-side encryption",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html#require-sse-kms"
    },
    "s3:x-amz-server-side-encryption-customer-algorithm": {
      "description": "Filters access by customer specified algorithm for server-side encryption",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html"
    },
    "s3:x-amz-storage-class": {
      "description": "Filters access by storage class",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html#sc-howtoset"
    },
    "s3:x-amz-website-redirect-location": {
      "description": "Filters access by a specific website redirect location for buckets that are configured as static websites",
      "type": "String",
      "url": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/how-to-page-redirect.html#page-redirect-using-rest-api"
    }
  }
}