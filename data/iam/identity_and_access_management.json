{
  "name": "Identity And Access Management",
  "prefix": "iam",
  "url": "https://docs.aws.amazon.com/service-authorization/latest/reference/list_identityandaccessmanagement.html",
  "actions": {
    "AddClientIDToOpenIDConnectProvider": {
      "description": "Grants permission to add a new client ID (audience) to the list of registered IDs for the specified IAM OpenID Connect (OIDC) provider resource",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "oidc-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AddClientIDToOpenIDConnectProvider.html"
    },
    "AddRoleToInstanceProfile": {
      "description": "Grants permission to add an IAM role to the specified instance profile",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-profile": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [
        "iam:PassRole"
      ],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AddRoleToInstanceProfile.html"
    },
    "AddUserToGroup": {
      "description": "Grants permission to add an IAM user to the specified IAM group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AddUserToGroup.html"
    },
    "AttachGroupPolicy": {
      "description": "Grants permission to attach a managed policy to the specified IAM group",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PolicyARN"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html"
    },
    "AttachRolePolicy": {
      "description": "Grants permission to attach a managed policy to the specified IAM role",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary",
        "iam:PolicyARN"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html"
    },
    "AttachUserPolicy": {
      "description": "Grants permission to attach a managed policy to the specified IAM user",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary",
        "iam:PolicyARN"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html"
    },
    "ChangePassword": {
      "description": "Grants permission for an IAM user to to change their own password",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ChangePassword.html"
    },
    "CreateAccessKey": {
      "description": "Grants permission to create access key and secret access key for the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateAccessKey.html"
    },
    "CreateAccountAlias": {
      "description": "Grants permission to create an alias for your AWS account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateAccountAlias.html"
    },
    "CreateGroup": {
      "description": "Grants permission to create a new group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateGroup.html"
    },
    "CreateInstanceProfile": {
      "description": "Grants permission to create a new instance profile",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-profile": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateInstanceProfile.html"
    },
    "CreateLoginProfile": {
      "description": "Grants permission to create a password for the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateLoginProfile.html"
    },
    "CreateOpenIDConnectProvider": {
      "description": "Grants permission to create an IAM resource that describes an identity provider (IdP) that supports OpenID Connect (OIDC)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "oidc-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateOpenIDConnectProvider.html"
    },
    "CreatePolicy": {
      "description": "Grants permission to create a new managed policy",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html"
    },
    "CreatePolicyVersion": {
      "description": "Grants permission to create a new version of the specified managed policy",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicyVersion.html"
    },
    "CreateRole": {
      "description": "Grants permission to create a new role",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "iam:PermissionsBoundary"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html"
    },
    "CreateSAMLProvider": {
      "description": "Grants permission to create an IAM resource that describes an identity provider (IdP) that supports SAML 2.0",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "saml-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateSAMLProvider.html"
    },
    "CreateServiceLinkedRole": {
      "description": "Grants permission to create an IAM role that allows an AWS service to perform actions on your behalf",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:AWSServiceName"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateServiceLinkedRole.html"
    },
    "CreateServiceSpecificCredential": {
      "description": "Grants permission to create a new service-specific credential for an IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateServiceSpecificCredential.html"
    },
    "CreateUser": {
      "description": "Grants permission to create a new IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "iam:PermissionsBoundary"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateUser.html"
    },
    "CreateVirtualMFADevice": {
      "description": "Grants permission to create a new virtual MFA device",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "mfa": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateVirtualMFADevice.html"
    },
    "DeactivateMFADevice": {
      "description": "Grants permission to deactivate the specified MFA device and remove its association with the IAM user for which it was originally enabled",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeactivateMFADevice.html"
    },
    "DeleteAccessKey": {
      "description": "Grants permission to delete the access key pair that is associated with the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccessKey.html"
    },
    "DeleteAccountAlias": {
      "description": "Grants permission to delete the specified AWS account alias",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccountAlias.html"
    },
    "DeleteAccountPasswordPolicy": {
      "description": "Grants permission to delete the password policy for the AWS account",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccountPasswordPolicy.html"
    },
    "DeleteGroup": {
      "description": "Grants permission to delete the specified IAM group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroup.html"
    },
    "DeleteGroupPolicy": {
      "description": "Grants permission to delete the specified inline policy from its group",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html"
    },
    "DeleteInstanceProfile": {
      "description": "Grants permission to delete the specified instance profile",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-profile": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteInstanceProfile.html"
    },
    "DeleteLoginProfile": {
      "description": "Grants permission to delete the password for the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteLoginProfile.html"
    },
    "DeleteOpenIDConnectProvider": {
      "description": "Grants permission to delete an OpenID Connect identity provider (IdP) resource object in IAM",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "oidc-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteOpenIDConnectProvider.html"
    },
    "DeletePolicy": {
      "description": "Grants permission to delete the specified managed policy and remove it from any IAM entities (users, groups, or roles) to which it is attached",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicy.html"
    },
    "DeletePolicyVersion": {
      "description": "Grants permission to delete a version from the specified managed policy",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicyVersion.html"
    },
    "DeleteRole": {
      "description": "Grants permission to delete the specified role",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRole.html"
    },
    "DeleteRolePermissionsBoundary": {
      "description": "Grants permission to remove the permissions boundary from a role",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePermissionsBoundary.html"
    },
    "DeleteRolePolicy": {
      "description": "Grants permission to delete the specified inline policy from the specified role",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html"
    },
    "DeleteSAMLProvider": {
      "description": "Grants permission to delete a SAML provider resource in IAM",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "saml-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSAMLProvider.html"
    },
    "DeleteSSHPublicKey": {
      "description": "Grants permission to delete the specified SSH public key",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSSHPublicKey.html"
    },
    "DeleteServerCertificate": {
      "description": "Grants permission to delete the specified server certificate",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "server-certificate": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteServerCertificate.html"
    },
    "DeleteServiceLinkedRole": {
      "description": "Grants permission to delete an IAM role that is linked to a specific AWS service, if the service is no longer using it",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteServiceLinkedRole.html"
    },
    "DeleteServiceSpecificCredential": {
      "description": "Grants permission to delete the specified service-specific credential for an IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteServiceSpecificCredential.html"
    },
    "DeleteSigningCertificate": {
      "description": "Grants permission to delete a signing certificate that is associated with the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSigningCertificate.html"
    },
    "DeleteUser": {
      "description": "Grants permission to delete the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUser.html"
    },
    "DeleteUserPermissionsBoundary": {
      "description": "Grants permission to remove the permissions boundary from the specified IAM user",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPermissionsBoundary.html"
    },
    "DeleteUserPolicy": {
      "description": "Grants permission to delete the specified inline policy from an IAM user",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html"
    },
    "DeleteVirtualMFADevice": {
      "description": "Grants permission to delete a virtual MFA device",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "mfa": {
          "required": false,
          "conditionKeys": []
        },
        "sms-mfa": {
          "required": false,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteVirtualMFADevice.html"
    },
    "DetachGroupPolicy": {
      "description": "Grants permission to detach a managed policy from the specified IAM group",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PolicyARN"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachGroupPolicy.html"
    },
    "DetachRolePolicy": {
      "description": "Grants permission to detach a managed policy from the specified role",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary",
        "iam:PolicyARN"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachRolePolicy.html"
    },
    "DetachUserPolicy": {
      "description": "Grants permission to detach a managed policy from the specified IAM user",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary",
        "iam:PolicyARN"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachUserPolicy.html"
    },
    "EnableMFADevice": {
      "description": "Grants permission to enable an MFA device and associate it with the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html"
    },
    "GenerateCredentialReport": {
      "description": "Grants permission to generate a credential report for the AWS account",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateCredentialReport.html"
    },
    "GenerateOrganizationsAccessReport": {
      "description": "Grants permission to generate an access report for an AWS Organizations entity",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "access-report": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:OrganizationsPolicyId"
      ],
      "dependentActions": [
        "organizations:DescribePolicy",
        "organizations:ListChildren",
        "organizations:ListParents",
        "organizations:ListPoliciesForTarget",
        "organizations:ListRoots",
        "organizations:ListTargetsForPolicy"
      ],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateOrganizationsAccessReport.html"
    },
    "GenerateServiceLastAccessedDetails": {
      "description": "Grants permission to generate a service last accessed data report for an IAM resource",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        },
        "policy": {
          "required": true,
          "conditionKeys": []
        },
        "role": {
          "required": true,
          "conditionKeys": []
        },
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateServiceLastAccessedDetails.html"
    },
    "GetAccessKeyLastUsed": {
      "description": "Grants permission to retrieve information about when the specified access key was last used",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccessKeyLastUsed.html"
    },
    "GetAccountAuthorizationDetails": {
      "description": "Grants permission to retrieve information about all IAM users, groups, roles, and policies in your AWS account, including their relationships to one another",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountAuthorizationDetails.html"
    },
    "GetAccountPasswordPolicy": {
      "description": "Grants permission to retrieve the password policy for the AWS account",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountPasswordPolicy.html"
    },
    "GetAccountSummary": {
      "description": "Grants permission to retrieve information about IAM entity usage and IAM quotas in the AWS account",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountSummary.html"
    },
    "GetContextKeysForCustomPolicy": {
      "description": "Grants permission to retrieve a list of all of the context keys that are referenced in the specified policy",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetContextKeysForCustomPolicy.html"
    },
    "GetContextKeysForPrincipalPolicy": {
      "description": "Grants permission to retrieve a list of all context keys that are referenced in all IAM policies that are attached to the specified IAM identity (user, group, or role)",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": false,
          "conditionKeys": []
        },
        "role": {
          "required": false,
          "conditionKeys": []
        },
        "user": {
          "required": false,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetContextKeysForPrincipalPolicy.html"
    },
    "GetCredentialReport": {
      "description": "Grants permission to retrieve a credential report for the AWS account",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetCredentialReport.html"
    },
    "GetGroup": {
      "description": "Grants permission to retrieve a list of IAM users in the specified IAM group",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetGroup.html"
    },
    "GetGroupPolicy": {
      "description": "Grants permission to retrieve an inline policy document that is embedded in the specified IAM group",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetGroupPolicy.html"
    },
    "GetInstanceProfile": {
      "description": "Grants permission to retrieve information about the specified instance profile, including the instance profile's path, GUID, ARN, and role",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-profile": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetInstanceProfile.html"
    },
    "GetLoginProfile": {
      "description": "Grants permission to retrieve the user name and password creation date for the specified IAM user",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetLoginProfile.html"
    },
    "GetOpenIDConnectProvider": {
      "description": "Grants permission to retrieve information about the specified OpenID Connect (OIDC) provider resource in IAM",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "oidc-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetOpenIDConnectProvider.html"
    },
    "GetOrganizationsAccessReport": {
      "description": "Grants permission to retrieve an AWS Organizations access report",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetOrganizationsAccessReport.html"
    },
    "GetPolicy": {
      "description": "Grants permission to retrieve information about the specified managed policy, including the policy's default version and the total number of identities to which the policy is attached",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetPolicy.html"
    },
    "GetPolicyVersion": {
      "description": "Grants permission to retrieve information about a version of the specified managed policy, including the policy document",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetPolicyVersion.html"
    },
    "GetRole": {
      "description": "Grants permission to retrieve information about the specified role, including the role's path, GUID, ARN, and the role's trust policy",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetRole.html"
    },
    "GetRolePolicy": {
      "description": "Grants permission to retrieve an inline policy document that is embedded with the specified IAM role",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetRolePolicy.html"
    },
    "GetSAMLProvider": {
      "description": "Grants permission to retrieve the SAML provider metadocument that was uploaded when the IAM SAML provider resource was created or updated",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "saml-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetSAMLProvider.html"
    },
    "GetSSHPublicKey": {
      "description": "Grants permission to retrieve the specified SSH public key, including metadata about the key",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetSSHPublicKey.html"
    },
    "GetServerCertificate": {
      "description": "Grants permission to retrieve information about the specified server certificate stored in IAM",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "server-certificate": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetServerCertificate.html"
    },
    "GetServiceLastAccessedDetails": {
      "description": "Grants permission to retrieve information about the service last accessed data report",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetServiceLastAccessedDetails.html"
    },
    "GetServiceLastAccessedDetailsWithEntities": {
      "description": "Grants permission to retrieve information about the entities from the service last accessed data report",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetServiceLastAccessedDetailsWithEntities.html"
    },
    "GetServiceLinkedRoleDeletionStatus": {
      "description": "Grants permission to retrieve an IAM service-linked role deletion status",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetServiceLinkedRoleDeletionStatus.html"
    },
    "GetUser": {
      "description": "Grants permission to retrieve information about the specified IAM user, including the user's creation date, path, unique ID, and ARN",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetUser.html"
    },
    "GetUserPolicy": {
      "description": "Grants permission to retrieve an inline policy document that is embedded in the specified IAM user",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetUserPolicy.html"
    },
    "ListAccessKeys": {
      "description": "Grants permission to list information about the access key IDs that are associated with the specified IAM user",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAccessKeys.html"
    },
    "ListAccountAliases": {
      "description": "Grants permission to list the account alias that is associated with the AWS account",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAccountAliases.html"
    },
    "ListAttachedGroupPolicies": {
      "description": "Grants permission to list all managed policies that are attached to the specified IAM group",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedGroupPolicies.html"
    },
    "ListAttachedRolePolicies": {
      "description": "Grants permission to list all managed policies that are attached to the specified IAM role",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedRolePolicies.html"
    },
    "ListAttachedUserPolicies": {
      "description": "Grants permission to list all managed policies that are attached to the specified IAM user",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedUserPolicies.html"
    },
    "ListEntitiesForPolicy": {
      "description": "Grants permission to list all IAM identities to which the specified managed policy is attached",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListEntitiesForPolicy.html"
    },
    "ListGroupPolicies": {
      "description": "Grants permission to list the names of the inline policies that are embedded in the specified IAM group",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroupPolicies.html"
    },
    "ListGroups": {
      "description": "Grants permission to list the IAM groups that have the specified path prefix",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroups.html"
    },
    "ListGroupsForUser": {
      "description": "Grants permission to list the IAM groups that the specified IAM user belongs to",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroupsForUser.html"
    },
    "ListInstanceProfileTags": {
      "description": "Grants permission to list the tags that are attached to the specified instance profile",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-profile": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfileTags.html"
    },
    "ListInstanceProfiles": {
      "description": "Grants permission to list the instance profiles that have the specified path prefix",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-profile": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfiles.html"
    },
    "ListInstanceProfilesForRole": {
      "description": "Grants permission to list the instance profiles that have the specified associated IAM role",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfilesForRole.html"
    },
    "ListMFADeviceTags": {
      "description": "Grants permission to list the tags that are attached to the specified virtual mfa device",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "mfa": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADeviceTags.html"
    },
    "ListMFADevices": {
      "description": "Grants permission to list the MFA devices for an IAM user",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": false,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADevices.html"
    },
    "ListOpenIDConnectProviderTags": {
      "description": "Grants permission to list the tags that are attached to the specified OpenID Connect provider",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "oidc-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListOpenIDConnectProviderTags.html"
    },
    "ListOpenIDConnectProviders": {
      "description": "Grants permission to list information about the IAM OpenID Connect (OIDC) provider resource objects that are defined in the AWS account",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListOpenIDConnectProviders.html"
    },
    "ListPolicies": {
      "description": "Grants permission to list all managed policies",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPolicies.html"
    },
    "ListPoliciesGrantingServiceAccess": {
      "description": "Grants permission to list information about the policies that grant an entity access to a specific service",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        },
        "role": {
          "required": true,
          "conditionKeys": []
        },
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPoliciesGrantingServiceAccess.html"
    },
    "ListPolicyTags": {
      "description": "Grants permission to list the tags that are attached to the specified managed policy",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPolicyTags.html"
    },
    "ListPolicyVersions": {
      "description": "Grants permission to list information about the versions of the specified managed policy, including the version that is currently set as the policy's default version",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPolicyVersions.html"
    },
    "ListRolePolicies": {
      "description": "Grants permission to list the names of the inline policies that are embedded in the specified IAM role",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRolePolicies.html"
    },
    "ListRoleTags": {
      "description": "Grants permission to list the tags that are attached to the specified IAM role",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRoleTags.html"
    },
    "ListRoles": {
      "description": "Grants permission to list the IAM roles that have the specified path prefix",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRoles.html"
    },
    "ListSAMLProviderTags": {
      "description": "Grants permission to list the tags that are attached to the specified SAML provider",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "saml-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSAMLProviderTags.html"
    },
    "ListSAMLProviders": {
      "description": "Grants permission to list the SAML provider resources in IAM",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSAMLProviders.html"
    },
    "ListSSHPublicKeys": {
      "description": "Grants permission to list information about the SSH public keys that are associated with the specified IAM user",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSSHPublicKeys.html"
    },
    "ListServerCertificateTags": {
      "description": "Grants permission to list the tags that are attached to the specified server certificate",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "server-certificate": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListServerCertificateTags.html"
    },
    "ListServerCertificates": {
      "description": "Grants permission to list the server certificates that have the specified path prefix",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListServerCertificates.html"
    },
    "ListServiceSpecificCredentials": {
      "description": "Grants permission to list the service-specific credentials that are associated with the specified IAM user",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListServiceSpecificCredentials.html"
    },
    "ListSigningCertificates": {
      "description": "Grants permission to list information about the signing certificates that are associated with the specified IAM user",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSigningCertificates.html"
    },
    "ListUserPolicies": {
      "description": "Grants permission to list the names of the inline policies that are embedded in the specified IAM user",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUserPolicies.html"
    },
    "ListUserTags": {
      "description": "Grants permission to list the tags that are attached to the specified IAM user",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUserTags.html"
    },
    "ListUsers": {
      "description": "Grants permission to list the IAM users that have the specified path prefix",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUsers.html"
    },
    "ListVirtualMFADevices": {
      "description": "Grants permission to list virtual MFA devices by assignment status",
      "accessLevel": "List",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListVirtualMFADevices.html"
    },
    "PassRole": {
      "description": "Grants permission to pass a role to a service",
      "accessLevel": "Write",
      "permissionOnly": true,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:AssociatedResourceArn",
        "iam:PassedToService"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_passrole.html"
    },
    "PutGroupPolicy": {
      "description": "Grants permission to create or update an inline policy document that is embedded in the specified IAM group",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html"
    },
    "PutRolePermissionsBoundary": {
      "description": "Grants permission to set a managed policy as a permissions boundary for a role",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePermissionsBoundary.html"
    },
    "PutRolePolicy": {
      "description": "Grants permission to create or update an inline policy document that is embedded in the specified IAM role",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html"
    },
    "PutUserPermissionsBoundary": {
      "description": "Grants permission to set a managed policy as a permissions boundary for an IAM user",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPermissionsBoundary.html"
    },
    "PutUserPolicy": {
      "description": "Grants permission to create or update an inline policy document that is embedded in the specified IAM user",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "iam:PermissionsBoundary"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html"
    },
    "RemoveClientIDFromOpenIDConnectProvider": {
      "description": "Grants permission to remove the client ID (audience) from the list of client IDs in the specified IAM OpenID Connect (OIDC) provider resource",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "oidc-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveClientIDFromOpenIDConnectProvider.html"
    },
    "RemoveRoleFromInstanceProfile": {
      "description": "Grants permission to remove an IAM role from the specified EC2 instance profile",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-profile": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveRoleFromInstanceProfile.html"
    },
    "RemoveUserFromGroup": {
      "description": "Grants permission to remove an IAM user from the specified group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveUserFromGroup.html"
    },
    "ResetServiceSpecificCredential": {
      "description": "Grants permission to reset the password for an existing service-specific credential for an IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ResetServiceSpecificCredential.html"
    },
    "ResyncMFADevice": {
      "description": "Grants permission to synchronize the specified MFA device with its IAM entity (user or role)",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ResyncMFADevice.html"
    },
    "SetDefaultPolicyVersion": {
      "description": "Grants permission to set the version of the specified policy as the policy's default version",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_SetDefaultPolicyVersion.html"
    },
    "SetSecurityTokenServicePreferences": {
      "description": "Grants permission to set the STS global endpoint token version",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_SetSecurityTokenServicePreferences.html"
    },
    "SimulateCustomPolicy": {
      "description": "Grants permission to simulate whether an identity-based policy or resource-based policy provides permissions for specific API operations and resources",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_SimulateCustomPolicy.html"
    },
    "SimulatePrincipalPolicy": {
      "description": "Grants permission to simulate whether an identity-based policy that is attached to a specified IAM entity (user or role) provides permissions for specific API operations and resources",
      "accessLevel": "Read",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": false,
          "conditionKeys": []
        },
        "role": {
          "required": false,
          "conditionKeys": []
        },
        "user": {
          "required": false,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_SimulatePrincipalPolicy.html"
    },
    "TagInstanceProfile": {
      "description": "Grants permission to add tags to an instance profile",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-profile": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagInstanceProfile.html"
    },
    "TagMFADevice": {
      "description": "Grants permission to add tags to a virtual mfa device",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "mfa": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagMFADevice.html"
    },
    "TagOpenIDConnectProvider": {
      "description": "Grants permission to add tags to an OpenID Connect provider",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "oidc-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagOpenIDConnectProvider.html"
    },
    "TagPolicy": {
      "description": "Grants permission to add tags to a managed policy",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagPolicy.html"
    },
    "TagRole": {
      "description": "Grants permission to add tags to an IAM role",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagRole.html"
    },
    "TagSAMLProvider": {
      "description": "Grants permission to add tags to a SAML Provider",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "saml-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagSAMLProvider.html"
    },
    "TagServerCertificate": {
      "description": "Grants permission to add tags to a server certificate",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "server-certificate": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagServerCertificate.html"
    },
    "TagUser": {
      "description": "Grants permission to add tags to an IAM user",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagUser.html"
    },
    "UntagInstanceProfile": {
      "description": "Grants permission to remove the specified tags from the instance profile",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "instance-profile": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagInstanceProfile.html"
    },
    "UntagMFADevice": {
      "description": "Grants permission to remove the specified tags from the virtual mfa device",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "mfa": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagMFADevice.html"
    },
    "UntagOpenIDConnectProvider": {
      "description": "Grants permission to remove the specified tags from the OpenID Connect provider",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "oidc-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagOpenIDConnectProvider.html"
    },
    "UntagPolicy": {
      "description": "Grants permission to remove the specified tags from the managed policy",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "policy": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagPolicy.html"
    },
    "UntagRole": {
      "description": "Grants permission to remove the specified tags from the role",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagRole.html"
    },
    "UntagSAMLProvider": {
      "description": "Grants permission to remove the specified tags from the SAML Provider",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "saml-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagSAMLProvider.html"
    },
    "UntagServerCertificate": {
      "description": "Grants permission to remove the specified tags from the server certificate",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "server-certificate": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagServerCertificate.html"
    },
    "UntagUser": {
      "description": "Grants permission to remove the specified tags from the user",
      "accessLevel": "Tagging",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagUser.html"
    },
    "UpdateAccessKey": {
      "description": "Grants permission to update the status of the specified access key as Active or Inactive",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAccessKey.html"
    },
    "UpdateAccountPasswordPolicy": {
      "description": "Grants permission to update the password policy settings for the AWS account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {},
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAccountPasswordPolicy.html"
    },
    "UpdateAssumeRolePolicy": {
      "description": "Grants permission to update the policy that grants an IAM entity permission to assume a role",
      "accessLevel": "Permissions management",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAssumeRolePolicy.html"
    },
    "UpdateGroup": {
      "description": "Grants permission to update the name or path of the specified IAM group",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "group": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateGroup.html"
    },
    "UpdateLoginProfile": {
      "description": "Grants permission to change the password for the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateLoginProfile.html"
    },
    "UpdateOpenIDConnectProviderThumbprint": {
      "description": "Grants permission to update the entire list of server certificate thumbprints that are associated with an OpenID Connect (OIDC) provider resource",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "oidc-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateOpenIDConnectProviderThumbprint.html"
    },
    "UpdateRole": {
      "description": "Grants permission to update the description or maximum session duration setting of a role",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateRole.html"
    },
    "UpdateRoleDescription": {
      "description": "Grants permission to update only the description of a role",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "role": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateRoleDescription.html"
    },
    "UpdateSAMLProvider": {
      "description": "Grants permission to update the metadata document for an existing SAML provider resource",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "saml-provider": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSAMLProvider.html"
    },
    "UpdateSSHPublicKey": {
      "description": "Grants permission to update the status of an IAM user's SSH public key to active or inactive",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSSHPublicKey.html"
    },
    "UpdateServerCertificate": {
      "description": "Grants permission to update the name or the path of the specified server certificate stored in IAM",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "server-certificate": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateServerCertificate.html"
    },
    "UpdateServiceSpecificCredential": {
      "description": "Grants permission to update the status of a service-specific credential to active or inactive for an IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateServiceSpecificCredential.html"
    },
    "UpdateSigningCertificate": {
      "description": "Grants permission to update the status of the specified user signing certificate to active or disabled",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSigningCertificate.html"
    },
    "UpdateUser": {
      "description": "Grants permission to update the name or the path of the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateUser.html"
    },
    "UploadSSHPublicKey": {
      "description": "Grants permission to upload an SSH public key and associate it with the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadSSHPublicKey.html"
    },
    "UploadServerCertificate": {
      "description": "Grants permission to upload a server certificate entity for the AWS account",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "server-certificate": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadServerCertificate.html"
    },
    "UploadSigningCertificate": {
      "description": "Grants permission to upload an X.509 signing certificate and associate it with the specified IAM user",
      "accessLevel": "Write",
      "permissionOnly": false,
      "resourceTypes": {
        "user": {
          "required": true,
          "conditionKeys": []
        }
      },
      "conditionKeys": [],
      "dependentActions": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadSigningCertificate.html"
    }
  },
  "resourceTypes": {
    "access-report": {
      "arn": "arn:${Partition}:iam::${Account}:access-report/${EntityPath}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor-view-data-orgs.html"
    },
    "assumed-role": {
      "arn": "arn:${Partition}:iam::${Account}:assumed-role/${RoleName}/${RoleSessionName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html"
    },
    "federated-user": {
      "arn": "arn:${Partition}:iam::${Account}:federated-user/${UserName}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html"
    },
    "group": {
      "arn": "arn:${Partition}:iam::${Account}:group/${GroupNameWithPath}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups.html"
    },
    "instance-profile": {
      "arn": "arn:${Partition}:iam::${Account}:instance-profile/${InstanceProfileNameWithPath}",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html"
    },
    "mfa": {
      "arn": "arn:${Partition}:iam::${Account}:mfa/${MfaTokenIdWithPath}",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa.html"
    },
    "oidc-provider": {
      "arn": "arn:${Partition}:iam::${Account}:oidc-provider/${OidcProviderName}",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html"
    },
    "policy": {
      "arn": "arn:${Partition}:iam::${Account}:policy/${PolicyNameWithPath}",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html"
    },
    "role": {
      "arn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "iam:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html"
    },
    "saml-provider": {
      "arn": "arn:${Partition}:iam::${Account}:saml-provider/${SamlProviderName}",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html"
    },
    "server-certificate": {
      "arn": "arn:${Partition}:iam::${Account}:server-certificate/${CertificateNameWithPath}",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html"
    },
    "sms-mfa": {
      "arn": "arn:${Partition}:iam::${Account}:sms-mfa/${MfaTokenIdWithPath}",
      "conditionKeys": [],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable_sms.html"
    },
    "user": {
      "arn": "arn:${Partition}:iam::${Account}:user/${UserNameWithPath}",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "iam:ResourceTag/${TagKey}"
      ],
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users.html"
    }
  },
  "conditionKeys": {
    "aws:RequestTag/${TagKey}": {
      "description": "Filters access based on the tags that are passed in the request",
      "type": "String",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag"
    },
    "aws:ResourceTag/${TagKey}": {
      "description": "Filters access based on the tags associated with the resource",
      "type": "String",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag"
    },
    "aws:TagKeys": {
      "description": "Filters access based on the tag keys that are passed in the request",
      "type": "ArrayOfString",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys"
    },
    "iam:AWSServiceName": {
      "description": "Filters access by the AWS service to which this role is attached",
      "type": "String",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_iam-condition-keys.html#ck_AWSServiceName"
    },
    "iam:AssociatedResourceArn": {
      "description": "Filters by the resource that the role will be used on behalf of",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_iam-condition-keys.html#ck_AssociatedResourceArn"
    },
    "iam:OrganizationsPolicyId": {
      "description": "Filters access by the ID of an AWS Organizations policy",
      "type": "String",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_iam-condition-keys.html#ck_OrganizationsPolicyId"
    },
    "iam:PassedToService": {
      "description": "Filters access by the AWS service to which this role is passed",
      "type": "String",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_iam-condition-keys.html#ck_PassedToService"
    },
    "iam:PermissionsBoundary": {
      "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_iam-condition-keys.html#ck_PermissionsBoundary"
    },
    "iam:PolicyARN": {
      "description": "Filters access by the ARN of an IAM policy",
      "type": "ARN",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_iam-condition-keys.html#ck_PolicyARN"
    },
    "iam:ResourceTag/${TagKey}": {
      "description": "Filters access by the tags attached to an IAM entity (user or role)",
      "type": "String",
      "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_iam-condition-keys.html#ck_ResourceTag"
    }
  }
}